{"ast":null,"code":"// Utility to populate the app with fake matches and conversations for demo purposes\n\nimport { generatePlaceholderConversation } from './placeholderPersonality.ts';\n\n// Extended personality data for multiple matches\nconst demoPersonalities = [{\n  id: 1001,\n  name: \"Alex\",\n  age: 27,\n  profilePicture: \"https://source.unsplash.com/random/400x400/?portrait,man\",\n  interests: \"hiking, reading science fiction, cooking international cuisine, playing the guitar, traveling\",\n  personalityType: \"thoughtful, intellectually curious, empathetic, slightly introverted, creative\",\n  compatibilityScore: 85,\n  conversationHighlight: \"We both shared a passion for exploring different cultures through food and travel\"\n}, {\n  id: 1002,\n  name: \"Jamie\",\n  age: 26,\n  profilePicture: \"https://source.unsplash.com/random/400x400/?portrait,woman\",\n  interests: \"yoga, digital art, indie music, sustainable fashion, psychology\",\n  personalityType: \"creative, empathetic, socially conscious, introspective, witty\",\n  compatibilityScore: 92,\n  conversationHighlight: \"We had a deep discussion about how art influences social change\"\n}, {\n  id: 1003,\n  name: \"Taylor\",\n  age: 29,\n  profilePicture: \"https://source.unsplash.com/random/400x400/?portrait,androgynous\",\n  interests: \"rock climbing, philosophy, documentary filmmaking, vegetarian cooking, minimalism\",\n  personalityType: \"adventurous, thoughtful, pragmatic, environmentally conscious, direct\",\n  compatibilityScore: 78,\n  conversationHighlight: \"We debated the ethics of minimalism versus material comfort in modern society\"\n}, {\n  id: 1004,\n  name: \"Morgan\",\n  age: 31,\n  profilePicture: \"https://source.unsplash.com/random/400x400/?portrait,professional\",\n  interests: \"entrepreneurship, sci-fi novels, tennis, wine tasting, architecture\",\n  personalityType: \"ambitious, analytical, sophisticated, slightly competitive, witty\",\n  compatibilityScore: 81,\n  conversationHighlight: \"We connected over our shared vision of mixing creativity with structured planning\"\n}];\n\n// Generate varied conversation transcripts\nconst generateVariedTranscript = personalityIndex => {\n  const baseConvo = generatePlaceholderConversation([]);\n  const personalities = [\"analytical and thoughtful\", \"warm and empathetic\", \"witty and playful\", \"deep and philosophical\"];\n  const topics = [\"travel experiences\", \"creative pursuits\", \"life philosophies\", \"future ambitions\"];\n\n  // Add a personalized beginning and ending to the transcript\n  let transcript = `User 1: Hi there! I'm excited to connect with you through AI Match!\\n\\n`;\n  transcript += `User 2: Hello! I'm ${demoPersonalities[personalityIndex].name}. Looking forward to getting to know you better.\\n\\n`;\n  transcript += `User 1: I noticed you're interested in ${demoPersonalities[personalityIndex].interests.split(',')[0]}. How did you get into that?\\n\\n`;\n  transcript += `User 2: It started a few years ago when I was looking for something new in my life. ${demoPersonalities[personalityIndex].interests.split(',')[0]} really resonated with me because it combines challenge with creativity. What about you - what are your main interests?\\n\\n`;\n\n  // Add the middle part of the conversation\n  transcript += baseConvo.transcript;\n\n  // Add a personalized ending\n  transcript += `User 2: I've really enjoyed our conversation. Based on our exchanges, I think we have a ${demoPersonalities[personalityIndex].compatibilityScore}% compatibility rate - especially around ${topics[personalityIndex]}!\\n\\n`;\n  transcript += `User 1: I agree! Your ${personalities[personalityIndex]} perspective has been refreshing. Would you be interested in continuing our conversation?\\n\\n`;\n  transcript += `User 2: Absolutely! I'd like that very much.\\n\\n`;\n  return transcript;\n};\n\n// Generate matches for the demo\nexport const generateDemoMatches = () => {\n  return demoPersonalities.map((personality, index) => ({\n    id: personality.id,\n    matchUserId: personality.id,\n    name: personality.name,\n    age: personality.age,\n    interests: personality.interests,\n    profilePicture: personality.profilePicture,\n    compatibilityScore: personality.compatibilityScore,\n    conversationTranscript: generateVariedTranscript(index)\n  }));\n};\n\n// Store matches in localStorage\nexport const populateDemoData = () => {\n  const matches = generateDemoMatches();\n  localStorage.setItem('demoMatches', JSON.stringify(matches));\n\n  // Store individual transcripts\n  matches.forEach(match => {\n    localStorage.setItem(`transcript_${match.id}`, match.conversationTranscript);\n  });\n\n  // Set a flag indicating demo data has been populated\n  localStorage.setItem('demoDataPopulated', 'true');\n};\n\n// Check if demo data is already populated\nexport const isDemoDataPopulated = () => {\n  return localStorage.getItem('demoDataPopulated') === 'true';\n};\n\n// Get all demo matches\nexport const getDemoMatches = () => {\n  const matchesJson = localStorage.getItem('demoMatches');\n  return matchesJson ? JSON.parse(matchesJson) : [];\n};\n\n// Get transcript for a specific match\nexport const getDemoTranscript = matchId => {\n  return localStorage.getItem(`transcript_${matchId}`) || '';\n};","map":{"version":3,"names":["generatePlaceholderConversation","demoPersonalities","id","name","age","profilePicture","interests","personalityType","compatibilityScore","conversationHighlight","generateVariedTranscript","personalityIndex","baseConvo","personalities","topics","transcript","split","generateDemoMatches","map","personality","index","matchUserId","conversationTranscript","populateDemoData","matches","localStorage","setItem","JSON","stringify","forEach","match","isDemoDataPopulated","getItem","getDemoMatches","matchesJson","parse","getDemoTranscript","matchId"],"sources":["C:/Users/omals/Documents/hacklondon 2025/dating-app/src/utils/fakeDemoData.ts"],"sourcesContent":["// Utility to populate the app with fake matches and conversations for demo purposes\r\nimport { Match } from '../services/api.ts';\r\nimport { placeholderPersonality, generatePlaceholderConversation } from './placeholderPersonality.ts';\r\n\r\n// Extended personality data for multiple matches\r\nconst demoPersonalities = [\r\n  {\r\n    id: 1001,\r\n    name: \"Alex\",\r\n    age: 27,\r\n    profilePicture: \"https://source.unsplash.com/random/400x400/?portrait,man\",\r\n    interests: \"hiking, reading science fiction, cooking international cuisine, playing the guitar, traveling\",\r\n    personalityType: \"thoughtful, intellectually curious, empathetic, slightly introverted, creative\",\r\n    compatibilityScore: 85,\r\n    conversationHighlight: \"We both shared a passion for exploring different cultures through food and travel\"\r\n  },\r\n  {\r\n    id: 1002,\r\n    name: \"Jamie\",\r\n    age: 26,\r\n    profilePicture: \"https://source.unsplash.com/random/400x400/?portrait,woman\",\r\n    interests: \"yoga, digital art, indie music, sustainable fashion, psychology\",\r\n    personalityType: \"creative, empathetic, socially conscious, introspective, witty\",\r\n    compatibilityScore: 92,\r\n    conversationHighlight: \"We had a deep discussion about how art influences social change\"\r\n  },\r\n  {\r\n    id: 1003,\r\n    name: \"Taylor\",\r\n    age: 29,\r\n    profilePicture: \"https://source.unsplash.com/random/400x400/?portrait,androgynous\",\r\n    interests: \"rock climbing, philosophy, documentary filmmaking, vegetarian cooking, minimalism\",\r\n    personalityType: \"adventurous, thoughtful, pragmatic, environmentally conscious, direct\",\r\n    compatibilityScore: 78,\r\n    conversationHighlight: \"We debated the ethics of minimalism versus material comfort in modern society\"\r\n  },\r\n  {\r\n    id: 1004,\r\n    name: \"Morgan\",\r\n    age: 31,\r\n    profilePicture: \"https://source.unsplash.com/random/400x400/?portrait,professional\",\r\n    interests: \"entrepreneurship, sci-fi novels, tennis, wine tasting, architecture\",\r\n    personalityType: \"ambitious, analytical, sophisticated, slightly competitive, witty\",\r\n    compatibilityScore: 81,\r\n    conversationHighlight: \"We connected over our shared vision of mixing creativity with structured planning\"\r\n  }\r\n];\r\n\r\n// Generate varied conversation transcripts\r\nconst generateVariedTranscript = (personalityIndex: number): string => {\r\n  const baseConvo = generatePlaceholderConversation([]);\r\n  const personalities = [\"analytical and thoughtful\", \"warm and empathetic\", \"witty and playful\", \"deep and philosophical\"];\r\n  const topics = [\"travel experiences\", \"creative pursuits\", \"life philosophies\", \"future ambitions\"];\r\n  \r\n  // Add a personalized beginning and ending to the transcript\r\n  let transcript = `User 1: Hi there! I'm excited to connect with you through AI Match!\\n\\n`;\r\n  transcript += `User 2: Hello! I'm ${demoPersonalities[personalityIndex].name}. Looking forward to getting to know you better.\\n\\n`;\r\n  transcript += `User 1: I noticed you're interested in ${demoPersonalities[personalityIndex].interests.split(',')[0]}. How did you get into that?\\n\\n`;\r\n  transcript += `User 2: It started a few years ago when I was looking for something new in my life. ${demoPersonalities[personalityIndex].interests.split(',')[0]} really resonated with me because it combines challenge with creativity. What about you - what are your main interests?\\n\\n`;\r\n  \r\n  // Add the middle part of the conversation\r\n  transcript += baseConvo.transcript;\r\n  \r\n  // Add a personalized ending\r\n  transcript += `User 2: I've really enjoyed our conversation. Based on our exchanges, I think we have a ${demoPersonalities[personalityIndex].compatibilityScore}% compatibility rate - especially around ${topics[personalityIndex]}!\\n\\n`;\r\n  transcript += `User 1: I agree! Your ${personalities[personalityIndex]} perspective has been refreshing. Would you be interested in continuing our conversation?\\n\\n`;\r\n  transcript += `User 2: Absolutely! I'd like that very much.\\n\\n`;\r\n  \r\n  return transcript;\r\n};\r\n\r\n// Generate matches for the demo\r\nexport const generateDemoMatches = (): Match[] => {\r\n  return demoPersonalities.map((personality, index) => ({\r\n    id: personality.id,\r\n    matchUserId: personality.id,\r\n    name: personality.name,\r\n    age: personality.age,\r\n    interests: personality.interests,\r\n    profilePicture: personality.profilePicture,\r\n    compatibilityScore: personality.compatibilityScore,\r\n    conversationTranscript: generateVariedTranscript(index)\r\n  }));\r\n};\r\n\r\n// Store matches in localStorage\r\nexport const populateDemoData = (): void => {\r\n  const matches = generateDemoMatches();\r\n  localStorage.setItem('demoMatches', JSON.stringify(matches));\r\n  \r\n  // Store individual transcripts\r\n  matches.forEach(match => {\r\n    localStorage.setItem(`transcript_${match.id}`, match.conversationTranscript);\r\n  });\r\n  \r\n  // Set a flag indicating demo data has been populated\r\n  localStorage.setItem('demoDataPopulated', 'true');\r\n};\r\n\r\n// Check if demo data is already populated\r\nexport const isDemoDataPopulated = (): boolean => {\r\n  return localStorage.getItem('demoDataPopulated') === 'true';\r\n};\r\n\r\n// Get all demo matches\r\nexport const getDemoMatches = (): Match[] => {\r\n  const matchesJson = localStorage.getItem('demoMatches');\r\n  return matchesJson ? JSON.parse(matchesJson) : [];\r\n};\r\n\r\n// Get transcript for a specific match\r\nexport const getDemoTranscript = (matchId: number): string => {\r\n  return localStorage.getItem(`transcript_${matchId}`) || '';\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}