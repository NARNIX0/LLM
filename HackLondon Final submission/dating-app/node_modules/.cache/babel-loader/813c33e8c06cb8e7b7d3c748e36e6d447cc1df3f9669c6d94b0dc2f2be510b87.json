{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omals\\\\Documents\\\\GitHub\\\\LLM\\\\HackLondon Final submission\\\\dating-app\\\\src\\\\pages\\\\AIChatSimulation.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Typography, Box, Paper, Avatar, Button, CircularProgress, Alert } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\n\n// Define the personalities\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst personalities = [{\n  id: 0,\n  name: \"Alex\",\n  avatar: \"A\",\n  color: \"#3f51b5\",\n  prompt: \"Thoughtful, artistic, philosophical, introspective\"\n}, {\n  id: 1,\n  name: \"Jordan\",\n  avatar: \"J\",\n  color: \"#f50057\",\n  prompt: \"Adventurous, energetic, enthusiastic, optimistic\"\n}];\n\n// Define a message type\n\n// Conversation starters\nconst conversationStarters = [\"What do you think gives life meaning?\", \"If you could travel anywhere, where would you go and why?\", \"What's something you've changed your mind about recently?\", \"Do you think technology is bringing people closer together or pushing them apart?\", \"What's a book or movie that changed how you see the world?\"];\n\n// Hardcoded responses for Alex (thoughtful, philosophical)\nconst alexResponses = [\"That's a profound question. I believe meaning emerges from our connections with others and the art we create. I find purpose in exploring deep ideas and trying to understand the human experience.\", \"I've been reading Frankl's 'Man's Search for Meaning' lately. His idea that meaning comes from work, love, and courage resonates with me. What gives your life meaning?\", \"There's something beautiful about how different perspectives can enrich our understanding. I value these thoughtful exchanges that make us examine our beliefs.\", \"I think authentic relationships are at the heart of a meaningful life. The connections where we can be vulnerable and truly seen by another person.\", \"Art and literature often capture truths that are difficult to express directly. Have you ever encountered a piece of art that seemed to articulate something you couldn't put into words?\", \"That reminds me of a quote by Rilke about living the questions. Sometimes embracing uncertainty is more valuable than having all the answers.\"];\n\n// Hardcoded responses for Jordan (adventurous, enthusiastic)\nconst jordanResponses = [\"Life is all about experiencing everything you can! I find meaning in pushing my boundaries and collecting amazing stories and adventures.\", \"I just got back from hiking in the mountains, and there's nothing like that feeling of accomplishment when you reach the summit! What adventures are on your bucket list?\", \"Totally! I think we grow the most when we're trying new things and stepping outside our comfort zones. That's where the magic happens!\", \"I believe connections with others make life exciting. Whether it's meeting new people while traveling or sharing adventures with friends - it's all about those shared experiences!\", \"I'm always planning my next adventure! Currently saving up for a road trip down the coast. Sometimes spontaneous trips lead to the best memories!\", \"Energy is contagious! I try to bring positivity to everything I do. Life's too short not to make the most of every single day.\"];\nconst AIChatSimulation = () => {\n  _s();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([]);\n  const [isActive, setIsActive] = useState(false);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n  const [messageCount, setMessageCount] = useState({\n    0: 0,\n    1: 0\n  });\n  const [isComplete, setIsComplete] = useState(false);\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Function to start the conversation\n  const startConversation = () => {\n    setIsActive(true);\n    setIsComplete(false);\n    setMessages([]);\n    setMessageCount({\n      0: 0,\n      1: 0\n    });\n\n    // Choose a random starter\n    const starter = conversationStarters[Math.floor(Math.random() * conversationStarters.length)];\n\n    // Add first message from Alex (personality 0)\n    addMessage(0, starter);\n\n    // Schedule Jordan's response\n    scheduleNextMessage(0);\n  };\n\n  // Add a new message\n  const addMessage = (sender, text) => {\n    const newMessage = {\n      id: Date.now(),\n      sender,\n      text\n    };\n    setMessages(prev => [...prev, newMessage]);\n    setMessageCount(prev => ({\n      ...prev,\n      [sender]: prev[sender] + 1\n    }));\n    return newMessage;\n  };\n\n  // Add a typing indicator\n  const addTypingIndicator = sender => {\n    const indicator = {\n      id: Date.now(),\n      sender,\n      text: \"...\",\n      isTyping: true\n    };\n    setMessages(prev => [...prev, indicator]);\n    return indicator;\n  };\n\n  // Remove the typing indicator\n  const removeTypingIndicator = indicator => {\n    setMessages(prev => prev.filter(m => m.id !== indicator.id));\n  };\n\n  // Schedule the next message\n  const scheduleNextMessage = lastSender => {\n    // Determine next sender (alternate between 0 and 1)\n    const nextSender = lastSender === 0 ? 1 : 0;\n\n    // Check if we've reached the message limit\n    if (messageCount[nextSender] >= 10) {\n      setIsComplete(true);\n      setIsActive(false);\n      return;\n    }\n\n    // Show typing indicator after a short delay\n    setTimeout(() => {\n      if (!isActive) return;\n      const indicator = addTypingIndicator(nextSender);\n\n      // Generate a response after a typing delay\n      setTimeout(() => {\n        if (!isActive) return;\n\n        // Remove typing indicator\n        removeTypingIndicator(indicator);\n\n        // Add the response based on personality\n        let response;\n        if (nextSender === 0) {\n          // Alex response\n          response = alexResponses[Math.floor(Math.random() * alexResponses.length)];\n        } else {\n          // Jordan response\n          response = jordanResponses[Math.floor(Math.random() * jordanResponses.length)];\n        }\n\n        // Add the message\n        addMessage(nextSender, response);\n\n        // Schedule the next message\n        scheduleNextMessage(nextSender);\n      }, 1000); // Typing time\n    }, 500); // Delay before typing starts\n  };\n\n  // Stop the conversation\n  const stopConversation = () => {\n    setIsActive(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 22\n        }, this),\n        onClick: () => navigate('/'),\n        sx: {\n          mb: 3\n        },\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        textAlign: \"center\",\n        children: \"AI Match Simulation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        paragraph: true,\n        textAlign: \"center\",\n        children: \"Watch as two AI personalities have a conversation to see how our matching system works. Each AI has a distinct personality and communication style.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"warning\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), messages.length === 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          my: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"large\",\n          startIcon: /*#__PURE__*/_jsxDEV(PlayArrowIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 26\n          }, this),\n          onClick: startConversation,\n          sx: {\n            py: 2,\n            px: 4\n          },\n          children: \"Start AI Conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), messages.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            mb: 2,\n            mt: 4\n          },\n          children: personalities.map(personality => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              sx: {\n                bgcolor: personality.color,\n                mr: 1\n              },\n              children: personality.avatar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              children: [personality.name, \" (\", personality.prompt, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this)]\n          }, personality.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            height: '60vh',\n            overflowY: 'auto',\n            p: 2,\n            backgroundColor: '#f5f5f5'\n          },\n          children: [messages.map(message => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: message.sender === 0 ? 'flex-start' : 'flex-end',\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                maxWidth: '70%',\n                bgcolor: message.sender === 0 ? personalities[0].color : personalities[1].color,\n                color: 'white',\n                p: 2,\n                borderRadius: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: message.isTyping ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 16,\n                  color: \"inherit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    sx: {\n                      display: 'block',\n                      opacity: 0.8,\n                      mb: 0.5\n                    },\n                    children: personalities[message.sender].name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 27\n                  }, this), message.text]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }, this)\n          }, message.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [personalities[0].name, \": \", messageCount[0], \"/10 messages\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this), isActive && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"secondary\",\n            onClick: stopConversation,\n            children: \"Stop Conversation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [personalities[1].name, \": \", messageCount[1], \"/10 messages\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), isComplete && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3,\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Conversation Complete!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => navigate('/create-profile'),\n              sx: {\n                mx: 1\n              },\n              children: \"Create Your Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"secondary\",\n              onClick: startConversation,\n              sx: {\n                mx: 1\n              },\n              children: \"Start New Conversation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n_s(AIChatSimulation, \"Ue+xLFM6pEuOSGCXnB++daPt7yY=\", false, function () {\n  return [useNavigate];\n});\n_c = AIChatSimulation;\nexport default AIChatSimulation;\nvar _c;\n$RefreshReg$(_c, \"AIChatSimulation\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","Container","Typography","Box","Paper","Avatar","Button","CircularProgress","Alert","ArrowBackIcon","PlayArrowIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","personalities","id","name","avatar","color","prompt","conversationStarters","alexResponses","jordanResponses","AIChatSimulation","_s","navigate","messages","setMessages","isActive","setIsActive","error","setError","messagesEndRef","messageCount","setMessageCount","isComplete","setIsComplete","_messagesEndRef$curre","current","scrollIntoView","behavior","startConversation","starter","Math","floor","random","length","addMessage","scheduleNextMessage","sender","text","newMessage","Date","now","prev","addTypingIndicator","indicator","isTyping","removeTypingIndicator","filter","m","lastSender","nextSender","setTimeout","response","stopConversation","maxWidth","children","sx","py","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","mb","variant","gutterBottom","textAlign","paragraph","severity","display","justifyContent","my","size","px","mt","map","personality","alignItems","bgcolor","mr","elevation","height","overflowY","p","backgroundColor","message","borderRadius","opacity","ref","mx","_c","$RefreshReg$"],"sources":["C:/Users/omals/Documents/GitHub/LLM/HackLondon Final submission/dating-app/src/pages/AIChatSimulation.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  Paper,\r\n  Avatar,\r\n  Button,\r\n  CircularProgress,\r\n  Divider,\r\n  Alert\r\n} from '@mui/material';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\n\r\n// Define the personalities\r\nconst personalities = [\r\n  {\r\n    id: 0,\r\n    name: \"Alex\",\r\n    avatar: \"A\",\r\n    color: \"#3f51b5\",\r\n    prompt: \"Thoughtful, artistic, philosophical, introspective\"\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Jordan\",\r\n    avatar: \"J\",\r\n    color: \"#f50057\",\r\n    prompt: \"Adventurous, energetic, enthusiastic, optimistic\"\r\n  }\r\n];\r\n\r\n// Define a message type\r\ninterface Message {\r\n  id: number;\r\n  sender: number; // 0 for Alex, 1 for Jordan\r\n  text: string;\r\n  isTyping?: boolean;\r\n}\r\n\r\n// Conversation starters\r\nconst conversationStarters = [\r\n  \"What do you think gives life meaning?\",\r\n  \"If you could travel anywhere, where would you go and why?\",\r\n  \"What's something you've changed your mind about recently?\",\r\n  \"Do you think technology is bringing people closer together or pushing them apart?\",\r\n  \"What's a book or movie that changed how you see the world?\"\r\n];\r\n\r\n// Hardcoded responses for Alex (thoughtful, philosophical)\r\nconst alexResponses = [\r\n  \"That's a profound question. I believe meaning emerges from our connections with others and the art we create. I find purpose in exploring deep ideas and trying to understand the human experience.\",\r\n  \"I've been reading Frankl's 'Man's Search for Meaning' lately. His idea that meaning comes from work, love, and courage resonates with me. What gives your life meaning?\",\r\n  \"There's something beautiful about how different perspectives can enrich our understanding. I value these thoughtful exchanges that make us examine our beliefs.\",\r\n  \"I think authentic relationships are at the heart of a meaningful life. The connections where we can be vulnerable and truly seen by another person.\",\r\n  \"Art and literature often capture truths that are difficult to express directly. Have you ever encountered a piece of art that seemed to articulate something you couldn't put into words?\",\r\n  \"That reminds me of a quote by Rilke about living the questions. Sometimes embracing uncertainty is more valuable than having all the answers.\"\r\n];\r\n\r\n// Hardcoded responses for Jordan (adventurous, enthusiastic)\r\nconst jordanResponses = [\r\n  \"Life is all about experiencing everything you can! I find meaning in pushing my boundaries and collecting amazing stories and adventures.\",\r\n  \"I just got back from hiking in the mountains, and there's nothing like that feeling of accomplishment when you reach the summit! What adventures are on your bucket list?\",\r\n  \"Totally! I think we grow the most when we're trying new things and stepping outside our comfort zones. That's where the magic happens!\",\r\n  \"I believe connections with others make life exciting. Whether it's meeting new people while traveling or sharing adventures with friends - it's all about those shared experiences!\",\r\n  \"I'm always planning my next adventure! Currently saving up for a road trip down the coast. Sometimes spontaneous trips lead to the best memories!\",\r\n  \"Energy is contagious! I try to bring positivity to everything I do. Life's too short not to make the most of every single day.\"\r\n];\r\n\r\nconst AIChatSimulation = () => {\r\n  const navigate = useNavigate();\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n  const [messageCount, setMessageCount] = useState({ 0: 0, 1: 0 });\r\n  const [isComplete, setIsComplete] = useState(false);\r\n  \r\n  // Scroll to bottom when messages change\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n  \r\n  // Function to start the conversation\r\n  const startConversation = () => {\r\n    setIsActive(true);\r\n    setIsComplete(false);\r\n    setMessages([]);\r\n    setMessageCount({ 0: 0, 1: 0 });\r\n    \r\n    // Choose a random starter\r\n    const starter = conversationStarters[Math.floor(Math.random() * conversationStarters.length)];\r\n    \r\n    // Add first message from Alex (personality 0)\r\n    addMessage(0, starter);\r\n    \r\n    // Schedule Jordan's response\r\n    scheduleNextMessage(0);\r\n  };\r\n  \r\n  // Add a new message\r\n  const addMessage = (sender: number, text: string) => {\r\n    const newMessage: Message = {\r\n      id: Date.now(),\r\n      sender,\r\n      text\r\n    };\r\n    \r\n    setMessages(prev => [...prev, newMessage]);\r\n    setMessageCount(prev => ({ ...prev, [sender]: prev[sender] + 1 }));\r\n    \r\n    return newMessage;\r\n  };\r\n  \r\n  // Add a typing indicator\r\n  const addTypingIndicator = (sender: number) => {\r\n    const indicator: Message = {\r\n      id: Date.now(),\r\n      sender,\r\n      text: \"...\",\r\n      isTyping: true\r\n    };\r\n    \r\n    setMessages(prev => [...prev, indicator]);\r\n    return indicator;\r\n  };\r\n  \r\n  // Remove the typing indicator\r\n  const removeTypingIndicator = (indicator: Message) => {\r\n    setMessages(prev => prev.filter(m => m.id !== indicator.id));\r\n  };\r\n  \r\n  // Schedule the next message\r\n  const scheduleNextMessage = (lastSender: number) => {\r\n    // Determine next sender (alternate between 0 and 1)\r\n    const nextSender = lastSender === 0 ? 1 : 0;\r\n    \r\n    // Check if we've reached the message limit\r\n    if (messageCount[nextSender] >= 10) {\r\n      setIsComplete(true);\r\n      setIsActive(false);\r\n      return;\r\n    }\r\n    \r\n    // Show typing indicator after a short delay\r\n    setTimeout(() => {\r\n      if (!isActive) return;\r\n      \r\n      const indicator = addTypingIndicator(nextSender);\r\n      \r\n      // Generate a response after a typing delay\r\n      setTimeout(() => {\r\n        if (!isActive) return;\r\n        \r\n        // Remove typing indicator\r\n        removeTypingIndicator(indicator);\r\n        \r\n        // Add the response based on personality\r\n        let response;\r\n        if (nextSender === 0) {\r\n          // Alex response\r\n          response = alexResponses[Math.floor(Math.random() * alexResponses.length)];\r\n        } else {\r\n          // Jordan response\r\n          response = jordanResponses[Math.floor(Math.random() * jordanResponses.length)];\r\n        }\r\n        \r\n        // Add the message\r\n        addMessage(nextSender, response);\r\n        \r\n        // Schedule the next message\r\n        scheduleNextMessage(nextSender);\r\n      }, 1000); // Typing time\r\n    }, 500); // Delay before typing starts\r\n  };\r\n  \r\n  // Stop the conversation\r\n  const stopConversation = () => {\r\n    setIsActive(false);\r\n  };\r\n  \r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Box sx={{ py: 4 }}>\r\n        <Button \r\n          startIcon={<ArrowBackIcon />} \r\n          onClick={() => navigate('/')}\r\n          sx={{ mb: 3 }}\r\n        >\r\n          Back to Home\r\n        </Button>\r\n        \r\n        <Typography variant=\"h4\" gutterBottom textAlign=\"center\">\r\n          AI Match Simulation\r\n        </Typography>\r\n        \r\n        <Typography variant=\"body1\" color=\"text.secondary\" paragraph textAlign=\"center\">\r\n          Watch as two AI personalities have a conversation to see how our matching system works. \r\n          Each AI has a distinct personality and communication style.\r\n        </Typography>\r\n        \r\n        {error && (\r\n          <Alert severity=\"warning\" sx={{ mb: 2 }}>\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        \r\n        {/* Start button */}\r\n        {messages.length === 0 && (\r\n          <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              startIcon={<PlayArrowIcon />}\r\n              onClick={startConversation}\r\n              sx={{ py: 2, px: 4 }}\r\n            >\r\n              Start AI Conversation\r\n            </Button>\r\n          </Box>\r\n        )}\r\n        \r\n        {/* Chat container */}\r\n        {messages.length > 0 && (\r\n          <>\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2, mt: 4 }}>\r\n              {personalities.map((personality) => (\r\n                <Box key={personality.id} sx={{ display: 'flex', alignItems: 'center' }}>\r\n                  <Avatar sx={{ bgcolor: personality.color, mr: 1 }}>\r\n                    {personality.avatar}\r\n                  </Avatar>\r\n                  <Typography variant=\"subtitle1\">\r\n                    {personality.name} ({personality.prompt})\r\n                  </Typography>\r\n                </Box>\r\n              ))}\r\n            </Box>\r\n            \r\n            <Paper \r\n              elevation={3} \r\n              sx={{ \r\n                height: '60vh', \r\n                overflowY: 'auto',\r\n                p: 2,\r\n                backgroundColor: '#f5f5f5'\r\n              }}\r\n            >\r\n              {messages.map((message) => (\r\n                <Box \r\n                  key={message.id}\r\n                  sx={{\r\n                    display: 'flex',\r\n                    justifyContent: message.sender === 0 ? 'flex-start' : 'flex-end',\r\n                    mb: 2\r\n                  }}\r\n                >\r\n                  <Box\r\n                    sx={{\r\n                      maxWidth: '70%',\r\n                      bgcolor: message.sender === 0 ? personalities[0].color : personalities[1].color,\r\n                      color: 'white',\r\n                      p: 2,\r\n                      borderRadius: 2\r\n                    }}\r\n                  >\r\n                    <Typography variant=\"body1\">\r\n                      {message.isTyping ? (\r\n                        <CircularProgress size={16} color=\"inherit\" />\r\n                      ) : (\r\n                        <>\r\n                          <Typography variant=\"caption\" sx={{ display: 'block', opacity: 0.8, mb: 0.5 }}>\r\n                            {personalities[message.sender].name}\r\n                          </Typography>\r\n                          {message.text}\r\n                        </>\r\n                      )}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              ))}\r\n              <div ref={messagesEndRef} />\r\n            </Paper>\r\n            \r\n            {/* Counter and controls */}\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mt: 2 }}>\r\n              <Typography variant=\"body2\">\r\n                {personalities[0].name}: {messageCount[0]}/10 messages\r\n              </Typography>\r\n              \r\n              {isActive && (\r\n                <Button \r\n                  variant=\"outlined\" \r\n                  color=\"secondary\"\r\n                  onClick={stopConversation}\r\n                >\r\n                  Stop Conversation\r\n                </Button>\r\n              )}\r\n              \r\n              <Typography variant=\"body2\">\r\n                {personalities[1].name}: {messageCount[1]}/10 messages\r\n              </Typography>\r\n            </Box>\r\n            \r\n            {/* Conversation complete message */}\r\n            {isComplete && (\r\n              <Box sx={{ mt: 3, textAlign: 'center' }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Conversation Complete!\r\n                </Typography>\r\n                <Box sx={{ mt: 2 }}>\r\n                  <Button \r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    onClick={() => navigate('/create-profile')}\r\n                    sx={{ mx: 1 }}\r\n                  >\r\n                    Create Your Profile\r\n                  </Button>\r\n                  <Button \r\n                    variant=\"outlined\" \r\n                    color=\"secondary\"\r\n                    onClick={startConversation}\r\n                    sx={{ mx: 1 }}\r\n                  >\r\n                    Start New Conversation\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AIChatSimulation; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}