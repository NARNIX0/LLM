{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omals\\\\Documents\\\\hacklondon 2025\\\\dating-app\\\\src\\\\pages\\\\ConversationScreen.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Container, Typography, Box, Paper, CircularProgress, Button, Card, CardContent, Avatar, Divider, Grid, Chip } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport PersonIcon from '@mui/icons-material/Person';\nimport StarIcon from '@mui/icons-material/Star';\nimport { simulateConversation } from '../services/api.ts';\nimport { placeholderPersonality, generatePlaceholderConversation } from '../utils/placeholderPersonality.ts';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ConversationScreen = () => {\n  _s();\n  const {\n    matchId\n  } = useParams();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  const [simulating, setSimulating] = useState(true);\n  const [messages, setMessages] = useState([]);\n  const [compatibilityScore, setCompatibilityScore] = useState(null);\n  const [transcript, setTranscript] = useState('');\n  const [messageCount, setMessageCount] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [assessmentResult, setAssessmentResult] = useState('');\n\n  // Determine if this is a placeholder match\n  const isPlaceholder = matchId === 'placeholder';\n\n  // Hardcoded user IDs for demo - in a real app, these would come from state/context or parameters\n  const user1Id = 1; // Current user\n  const user2Id = parseInt(matchId || '2', 10); // Match user\n\n  // Simulate typing effect for the conversation\n  const simulateTypingEffect = fullTranscript => {\n    // Split the transcript into lines\n    const lines = fullTranscript.trim().split('\\n');\n    let currentMessageIndex = 0;\n\n    // Create a new array of messages from the transcript\n    const newMessages = [];\n\n    // Process each line to determine if it's user1 or user2 speaking\n    lines.forEach(line => {\n      const trimmedLine = line.trim();\n      if (!trimmedLine) return; // Skip empty lines\n\n      if (trimmedLine.startsWith('User 1:')) {\n        newMessages.push({\n          sender: 'user1',\n          text: trimmedLine.substring('User 1:'.length).trim()\n        });\n      } else if (trimmedLine.startsWith('User 2:')) {\n        newMessages.push({\n          sender: 'user2',\n          text: trimmedLine.substring('User 2:'.length).trim()\n        });\n      }\n    });\n\n    // Function to add messages one by one with a delay\n    const addMessageWithDelay = () => {\n      if (currentMessageIndex < newMessages.length) {\n        setMessages(prev => [...prev, newMessages[currentMessageIndex]]);\n        setMessageCount(currentMessageIndex + 1);\n        currentMessageIndex++;\n\n        // Show assessment after 100 messages (50 exchanges)\n        if (currentMessageIndex >= 100) {\n          setSimulating(false);\n          assessConversation();\n        } else {\n          setTimeout(addMessageWithDelay, 1000); // 1 second between messages (accelerated for demo)\n        }\n      } else {\n        setSimulating(false); // Finished simulating\n        if (currentMessageIndex >= 100) {\n          assessConversation();\n        }\n      }\n    };\n\n    // Start adding messages\n    addMessageWithDelay();\n  };\n\n  // Function to assess conversation and generate compatibility report\n  const assessConversation = () => {\n    setShowResult(true);\n\n    // Save conversation completion to localStorage\n    localStorage.setItem('conversationCompleted', 'true');\n    if (compatibilityScore) {\n      localStorage.setItem('placeholderCompatibilityScore', compatibilityScore.toString());\n    }\n\n    // Generate an AI assessment of the conversation\n    const assessmentTexts = [`The conversation between you and ${placeholderPersonality.name} shows a strong mutual interest in understanding each other's perspectives. There's a natural flow in how you both respond to the questions, suggesting good conversational chemistry.`, `I noticed several points of compatibility around values related to ${placeholderPersonality.values[0]} and ${placeholderPersonality.values[2]}. Your communication styles complement each other well, with both of you sharing thoughtful, reflective responses.`, `Based on the conversation transcript, you both appear to share similar views on important life questions, particularly regarding relationships and personal growth. This suggests a foundation for meaningful connection.`, `The compatibility score of ${compatibilityScore}% reflects the alignment in your perspectives, communication patterns, and values revealed through the 36 Questions conversation simulation.`];\n    setAssessmentResult(assessmentTexts.join('\\n\\n'));\n  };\n  useEffect(() => {\n    const fetchConversation = async () => {\n      try {\n        if (isPlaceholder) {\n          // Use the placeholder personality for simulation\n          // In a real app, you'd use the user's actual answers from the database\n          const userAnswers = Array(25).fill(\"That's an interesting question. I'd have to think about it, but my initial reaction is that I value authentic connections and learning from different perspectives.\");\n          const placeholderResult = generatePlaceholderConversation(userAnswers);\n          setCompatibilityScore(placeholderResult.compatibilityScore);\n          setTranscript(placeholderResult.transcript);\n          simulateTypingEffect(placeholderResult.transcript);\n        } else {\n          // Use the API for regular matches\n          const response = await simulateConversation(user1Id, user2Id);\n          setCompatibilityScore(response.compatibilityScore);\n          setTranscript(response.transcript);\n          simulateTypingEffect(response.transcript);\n        }\n      } catch (error) {\n        console.error('Error simulating conversation:', error);\n        // Handle error\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchConversation();\n  }, [user1Id, user2Id, isPlaceholder]);\n  const handleBackToMatches = () => {\n    navigate('/matches');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 22\n        }, this),\n        onClick: handleBackToMatches,\n        sx: {\n          mb: 3\n        },\n        children: \"Back to Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        textAlign: \"center\",\n        children: \"AI Conversation Simulation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          my: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 60\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            mb: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'center'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                    sx: {\n                      width: 50,\n                      height: 50,\n                      bgcolor: 'primary.main',\n                      mr: 2\n                    },\n                    children: \"You\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: \"You\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'flex-end'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: isPlaceholder ? placeholderPersonality.name : `Match #${matchId}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n                    sx: {\n                      width: 50,\n                      height: 50,\n                      bgcolor: 'secondary.main',\n                      ml: 2\n                    },\n                    children: isPlaceholder ? placeholderPersonality.name.charAt(0) : 'M'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), isPlaceholder && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(Divider, {\n                sx: {\n                  my: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                children: [\"About \", placeholderPersonality.name, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      mb: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(PersonIcon, {\n                      color: \"primary\",\n                      sx: {\n                        mr: 1\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      children: [\"Age: \", placeholderPersonality.age]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      mb: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      gutterBottom: true,\n                      fontWeight: \"medium\",\n                      children: \"Interests:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        flexWrap: 'wrap',\n                        gap: 0.5\n                      },\n                      children: placeholderPersonality.interests.map((interest, index) => /*#__PURE__*/_jsxDEV(Chip, {\n                        label: interest,\n                        size: \"small\",\n                        color: \"primary\",\n                        variant: \"outlined\",\n                        sx: {\n                          mb: 0.5\n                        }\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 227,\n                        columnNumber: 31\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      mb: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      gutterBottom: true,\n                      fontWeight: \"medium\",\n                      children: \"Personality traits:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        flexWrap: 'wrap',\n                        gap: 0.5\n                      },\n                      children: placeholderPersonality.traits.map((trait, index) => /*#__PURE__*/_jsxDEV(Chip, {\n                        label: trait,\n                        size: \"small\",\n                        color: \"secondary\",\n                        variant: \"outlined\",\n                        sx: {\n                          mb: 0.5\n                        }\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 246,\n                        columnNumber: 31\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      mt: 1\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      fontSize: \"0.85rem\",\n                      children: placeholderPersonality.backgroundStory\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this), compatibilityScore !== null && !simulating && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                mt: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(FavoriteIcon, {\n                color: \"error\",\n                sx: {\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: [\"Compatibility Score: \", Math.round(compatibilityScore), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), simulating && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24,\n            sx: {\n              mr: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Conversation in progress... (\", messageCount, \"/100 messages)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 3,\n            maxHeight: '60vh',\n            overflow: 'auto'\n          },\n          className: \"conversation-container\",\n          children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(Box, {\n            className: `chat-bubble chat-bubble-${message.sender}`,\n            sx: {\n              display: 'flex',\n              flexDirection: 'column',\n              mb: 2,\n              p: 2,\n              borderRadius: 2,\n              maxWidth: '80%',\n              bgcolor: message.sender === 'user1' ? 'primary.light' : 'secondary.light',\n              color: message.sender === 'user1' ? 'primary.contrastText' : 'secondary.contrastText',\n              alignSelf: message.sender === 'user1' ? 'flex-start' : 'flex-end'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              gutterBottom: true,\n              children: message.sender === 'user1' ? 'You' : placeholderPersonality.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 17\n          }, this)), messages.length === 0 && !loading && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            sx: {\n              textAlign: 'center',\n              color: 'text.secondary'\n            },\n            children: \"No messages yet. The conversation will appear here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this), showResult && /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            mt: 4,\n            mb: 4,\n            p: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              gutterBottom: true,\n              sx: {\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(StarIcon, {\n                color: \"primary\",\n                sx: {\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 21\n              }, this), \"Compatibility Assessment\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              sx: {\n                my: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                whiteSpace: 'pre-line'\n              },\n              children: assessmentResult\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 15\n        }, this), !simulating && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 4,\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"large\",\n            onClick: handleBackToMatches,\n            startIcon: /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 30\n            }, this),\n            children: \"View All Matches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(ConversationScreen, \"HAxv2jTykmyxyEYxPofu5lxBov4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ConversationScreen;\nexport default ConversationScreen;\nvar _c;\n$RefreshReg$(_c, \"ConversationScreen\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Container","Typography","Box","Paper","CircularProgress","Button","Card","CardContent","Avatar","Divider","Grid","Chip","ArrowBackIcon","FavoriteIcon","PersonIcon","StarIcon","simulateConversation","placeholderPersonality","generatePlaceholderConversation","jsxDEV","_jsxDEV","Fragment","_Fragment","ConversationScreen","_s","matchId","navigate","loading","setLoading","simulating","setSimulating","messages","setMessages","compatibilityScore","setCompatibilityScore","transcript","setTranscript","messageCount","setMessageCount","showResult","setShowResult","assessmentResult","setAssessmentResult","isPlaceholder","user1Id","user2Id","parseInt","simulateTypingEffect","fullTranscript","lines","trim","split","currentMessageIndex","newMessages","forEach","line","trimmedLine","startsWith","push","sender","text","substring","length","addMessageWithDelay","prev","assessConversation","setTimeout","localStorage","setItem","toString","assessmentTexts","name","values","join","fetchConversation","userAnswers","Array","fill","placeholderResult","response","error","console","handleBackToMatches","maxWidth","children","sx","py","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","mb","variant","component","gutterBottom","textAlign","display","justifyContent","my","size","container","spacing","alignItems","item","xs","width","height","bgcolor","mr","ml","charAt","mt","sm","color","age","fontWeight","flexWrap","gap","interests","map","interest","index","label","traits","trait","fontSize","backgroundStory","Math","round","elevation","p","maxHeight","overflow","className","message","flexDirection","borderRadius","alignSelf","whiteSpace","_c","$RefreshReg$"],"sources":["C:/Users/omals/Documents/hacklondon 2025/dating-app/src/pages/ConversationScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport {\n  Container,\n  Typography,\n  Box,\n  Paper,\n  CircularProgress,\n  Button,\n  Card,\n  CardContent,\n  Avatar,\n  Divider,\n  Grid,\n  Chip,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon\n} from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport PersonIcon from '@mui/icons-material/Person';\nimport StarIcon from '@mui/icons-material/Star';\nimport LocalActivityIcon from '@mui/icons-material/LocalActivity';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport { simulateConversation } from '../services/api.ts';\nimport { placeholderPersonality, generatePlaceholderConversation } from '../utils/placeholderPersonality.ts';\n\ninterface ConversationMessage {\n  sender: 'user1' | 'user2';\n  text: string;\n}\n\nconst ConversationScreen: React.FC = () => {\n  const { matchId } = useParams<{ matchId: string }>();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  const [simulating, setSimulating] = useState(true);\n  const [messages, setMessages] = useState<ConversationMessage[]>([]);\n  const [compatibilityScore, setCompatibilityScore] = useState<number | null>(null);\n  const [transcript, setTranscript] = useState<string>('');\n  const [messageCount, setMessageCount] = useState<number>(0);\n  const [showResult, setShowResult] = useState<boolean>(false);\n  const [assessmentResult, setAssessmentResult] = useState<string>('');\n  \n  // Determine if this is a placeholder match\n  const isPlaceholder = matchId === 'placeholder';\n  \n  // Hardcoded user IDs for demo - in a real app, these would come from state/context or parameters\n  const user1Id = 1; // Current user\n  const user2Id = parseInt(matchId || '2', 10); // Match user\n\n  // Simulate typing effect for the conversation\n  const simulateTypingEffect = (fullTranscript: string) => {\n    // Split the transcript into lines\n    const lines = fullTranscript.trim().split('\\n');\n    let currentMessageIndex = 0;\n    \n    // Create a new array of messages from the transcript\n    const newMessages: ConversationMessage[] = [];\n    \n    // Process each line to determine if it's user1 or user2 speaking\n    lines.forEach(line => {\n      const trimmedLine = line.trim();\n      if (!trimmedLine) return; // Skip empty lines\n      \n      if (trimmedLine.startsWith('User 1:')) {\n        newMessages.push({\n          sender: 'user1',\n          text: trimmedLine.substring('User 1:'.length).trim()\n        });\n      } else if (trimmedLine.startsWith('User 2:')) {\n        newMessages.push({\n          sender: 'user2',\n          text: trimmedLine.substring('User 2:'.length).trim()\n        });\n      }\n    });\n    \n    // Function to add messages one by one with a delay\n    const addMessageWithDelay = () => {\n      if (currentMessageIndex < newMessages.length) {\n        setMessages(prev => [...prev, newMessages[currentMessageIndex]]);\n        setMessageCount(currentMessageIndex + 1);\n        currentMessageIndex++;\n        \n        // Show assessment after 100 messages (50 exchanges)\n        if (currentMessageIndex >= 100) {\n          setSimulating(false);\n          assessConversation();\n        } else {\n          setTimeout(addMessageWithDelay, 1000); // 1 second between messages (accelerated for demo)\n        }\n      } else {\n        setSimulating(false); // Finished simulating\n        if (currentMessageIndex >= 100) {\n          assessConversation();\n        }\n      }\n    };\n    \n    // Start adding messages\n    addMessageWithDelay();\n  };\n\n  // Function to assess conversation and generate compatibility report\n  const assessConversation = () => {\n    setShowResult(true);\n    \n    // Save conversation completion to localStorage\n    localStorage.setItem('conversationCompleted', 'true');\n    if (compatibilityScore) {\n      localStorage.setItem('placeholderCompatibilityScore', compatibilityScore.toString());\n    }\n    \n    // Generate an AI assessment of the conversation\n    const assessmentTexts = [\n      `The conversation between you and ${placeholderPersonality.name} shows a strong mutual interest in understanding each other's perspectives. There's a natural flow in how you both respond to the questions, suggesting good conversational chemistry.`,\n      \n      `I noticed several points of compatibility around values related to ${placeholderPersonality.values[0]} and ${placeholderPersonality.values[2]}. Your communication styles complement each other well, with both of you sharing thoughtful, reflective responses.`,\n      \n      `Based on the conversation transcript, you both appear to share similar views on important life questions, particularly regarding relationships and personal growth. This suggests a foundation for meaningful connection.`,\n      \n      `The compatibility score of ${compatibilityScore}% reflects the alignment in your perspectives, communication patterns, and values revealed through the 36 Questions conversation simulation.`\n    ];\n    \n    setAssessmentResult(assessmentTexts.join('\\n\\n'));\n  };\n\n  useEffect(() => {\n    const fetchConversation = async () => {\n      try {\n        if (isPlaceholder) {\n          // Use the placeholder personality for simulation\n          // In a real app, you'd use the user's actual answers from the database\n          const userAnswers = Array(25).fill(\"That's an interesting question. I'd have to think about it, but my initial reaction is that I value authentic connections and learning from different perspectives.\");\n          \n          const placeholderResult = generatePlaceholderConversation(userAnswers);\n          setCompatibilityScore(placeholderResult.compatibilityScore);\n          setTranscript(placeholderResult.transcript);\n          simulateTypingEffect(placeholderResult.transcript);\n        } else {\n          // Use the API for regular matches\n          const response = await simulateConversation(user1Id, user2Id);\n          setCompatibilityScore(response.compatibilityScore);\n          setTranscript(response.transcript);\n          simulateTypingEffect(response.transcript);\n        }\n      } catch (error) {\n        console.error('Error simulating conversation:', error);\n        // Handle error\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchConversation();\n  }, [user1Id, user2Id, isPlaceholder]);\n\n  const handleBackToMatches = () => {\n    navigate('/matches');\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      <Box sx={{ py: 4 }}>\n        <Button \n          startIcon={<ArrowBackIcon />} \n          onClick={handleBackToMatches}\n          sx={{ mb: 3 }}\n        >\n          Back to Matches\n        </Button>\n\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom textAlign=\"center\">\n          AI Conversation Simulation\n        </Typography>\n\n        {loading ? (\n          <Box sx={{ display: 'flex', justifyContent: 'center', my: 8 }}>\n            <CircularProgress size={60} />\n          </Box>\n        ) : (\n          <>\n            <Card sx={{ mb: 4 }}>\n              <CardContent>\n                <Grid container spacing={2} alignItems=\"center\">\n                  <Grid item xs={6}>\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                      <Avatar sx={{ width: 50, height: 50, bgcolor: 'primary.main', mr: 2 }}>\n                        You\n                      </Avatar>\n                      <Typography variant=\"h6\">You</Typography>\n                    </Box>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n                      <Typography variant=\"h6\">{isPlaceholder ? placeholderPersonality.name : `Match #${matchId}`}</Typography>\n                      <Avatar sx={{ width: 50, height: 50, bgcolor: 'secondary.main', ml: 2 }}>\n                        {isPlaceholder ? placeholderPersonality.name.charAt(0) : 'M'}\n                      </Avatar>\n                    </Box>\n                  </Grid>\n                </Grid>\n                \n                {isPlaceholder && (\n                  <Box sx={{ mt: 3 }}>\n                    <Divider sx={{ my: 2 }} />\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      About {placeholderPersonality.name}:\n                    </Typography>\n                    <Grid container spacing={2}>\n                      <Grid item xs={12} sm={6}>\n                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                          <PersonIcon color=\"primary\" sx={{ mr: 1 }} />\n                          <Typography variant=\"body2\">\n                            Age: {placeholderPersonality.age}\n                          </Typography>\n                        </Box>\n                        <Box sx={{ mb: 1 }}>\n                          <Typography variant=\"body2\" gutterBottom fontWeight=\"medium\">\n                            Interests:\n                          </Typography>\n                          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                            {placeholderPersonality.interests.map((interest, index) => (\n                              <Chip \n                                key={index}\n                                label={interest}\n                                size=\"small\"\n                                color=\"primary\"\n                                variant=\"outlined\"\n                                sx={{ mb: 0.5 }}\n                              />\n                            ))}\n                          </Box>\n                        </Box>\n                      </Grid>\n                      <Grid item xs={12} sm={6}>\n                        <Box sx={{ mb: 1 }}>\n                          <Typography variant=\"body2\" gutterBottom fontWeight=\"medium\">\n                            Personality traits:\n                          </Typography>\n                          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                            {placeholderPersonality.traits.map((trait, index) => (\n                              <Chip \n                                key={index}\n                                label={trait}\n                                size=\"small\"\n                                color=\"secondary\"\n                                variant=\"outlined\"\n                                sx={{ mb: 0.5 }}\n                              />\n                            ))}\n                          </Box>\n                        </Box>\n                        <Box sx={{ mt: 1 }}>\n                          <Typography variant=\"body2\" color=\"text.secondary\" fontSize=\"0.85rem\">\n                            {placeholderPersonality.backgroundStory}\n                          </Typography>\n                        </Box>\n                      </Grid>\n                    </Grid>\n                  </Box>\n                )}\n                \n                {compatibilityScore !== null && !simulating && (\n                  <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', mt: 3 }}>\n                    <FavoriteIcon color=\"error\" sx={{ mr: 1 }} />\n                    <Typography variant=\"h5\">\n                      Compatibility Score: {Math.round(compatibilityScore)}%\n                    </Typography>\n                  </Box>\n                )}\n              </CardContent>\n            </Card>\n            \n            {simulating && (\n              <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', mb: 3 }}>\n                <CircularProgress size={24} sx={{ mr: 2 }} />\n                <Typography variant=\"body1\">\n                  Conversation in progress... ({messageCount}/100 messages)\n                </Typography>\n              </Box>\n            )}\n\n            <Paper elevation={3} sx={{ p: 3, maxHeight: '60vh', overflow: 'auto' }} className=\"conversation-container\">\n              {messages.map((message, index) => (\n                <Box \n                  key={index}\n                  className={`chat-bubble chat-bubble-${message.sender}`}\n                  sx={{ \n                    display: 'flex',\n                    flexDirection: 'column',\n                    mb: 2,\n                    p: 2,\n                    borderRadius: 2,\n                    maxWidth: '80%',\n                    bgcolor: message.sender === 'user1' ? 'primary.light' : 'secondary.light',\n                    color: message.sender === 'user1' ? 'primary.contrastText' : 'secondary.contrastText',\n                    alignSelf: message.sender === 'user1' ? 'flex-start' : 'flex-end',\n                  }}\n                >\n                  <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                    {message.sender === 'user1' ? 'You' : placeholderPersonality.name}\n                  </Typography>\n                  <Typography variant=\"body1\">\n                    {message.text}\n                  </Typography>\n                </Box>\n              ))}\n              \n              {messages.length === 0 && !loading && (\n                <Typography variant=\"body1\" sx={{ textAlign: 'center', color: 'text.secondary' }}>\n                  No messages yet. The conversation will appear here.\n                </Typography>\n              )}\n            </Paper>\n\n            {showResult && (\n              <Card sx={{ mt: 4, mb: 4, p: 2 }}>\n                <CardContent>\n                  <Typography variant=\"h5\" gutterBottom sx={{ display: 'flex', alignItems: 'center' }}>\n                    <StarIcon color=\"primary\" sx={{ mr: 1 }} />\n                    Compatibility Assessment\n                  </Typography>\n                  <Divider sx={{ my: 2 }} />\n                  <Typography variant=\"body1\" sx={{ whiteSpace: 'pre-line' }}>\n                    {assessmentResult}\n                  </Typography>\n                </CardContent>\n              </Card>\n            )}\n\n            {!simulating && (\n              <Box sx={{ mt: 4, textAlign: 'center' }}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  onClick={handleBackToMatches}\n                  startIcon={<FavoriteIcon />}\n                >\n                  View All Matches\n                </Button>\n              </Box>\n            )}\n          </>\n        )}\n      </Box>\n    </Container>\n  );\n};\n\nexport default ConversationScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}