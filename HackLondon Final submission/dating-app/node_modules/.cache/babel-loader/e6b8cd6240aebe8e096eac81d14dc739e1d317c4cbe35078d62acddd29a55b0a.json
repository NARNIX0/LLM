{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omals\\\\Documents\\\\hacklondon 2025\\\\dating-app\\\\src\\\\pages\\\\ProfileCreation.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Typography, Box, TextField, Button, Stepper, Step, StepLabel, Card, CardContent, CircularProgress, Avatar } from '@mui/material';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport CheckIcon from '@mui/icons-material/Check';\nimport { questions } from '../utils/questions.ts';\nimport { createProfile, saveQuestionAnswer } from '../services/api.ts';\nimport { getUserProfile } from '../utils/userProfile.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileCreation = () => {\n  _s();\n  const navigate = useNavigate();\n  const [activeStep, setActiveStep] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [profileForm, setProfileForm] = useState({\n    name: '',\n    age: '',\n    interests: ''\n  });\n  const [profilePicture, setProfilePicture] = useState(null);\n  const [profilePicturePreview, setProfilePicturePreview] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [currentAnswer, setCurrentAnswer] = useState('');\n  const [userId, setUserId] = useState(null);\n  const [completedQuestions, setCompletedQuestions] = useState([]);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [userAnswers, setUserAnswers] = useState([]);\n\n  // Check if in edit mode when component mounts\n  useEffect(() => {\n    const editMode = localStorage.getItem('editingProfile') === 'true';\n    setIsEditMode(editMode);\n    if (editMode) {\n      // Load existing profile data\n      const userProfile = getUserProfile();\n      setProfileForm({\n        name: userProfile.name,\n        age: userProfile.age.toString(),\n        interests: userProfile.interests.join(', ')\n      });\n      if (userProfile.profilePicture) {\n        setProfilePicturePreview(userProfile.profilePicture);\n      }\n\n      // Set user ID from localStorage\n      const storedUserId = localStorage.getItem('currentUserId');\n      if (storedUserId) {\n        setUserId(parseInt(storedUserId));\n      }\n\n      // Load answers\n      setUserAnswers(userProfile.answers || []);\n\n      // Mark all questions as completed\n      const completedIndices = userProfile.answers.map((_, index) => index);\n      setCompletedQuestions(completedIndices);\n\n      // If we have answers, set the current question to the first one and show its answer\n      if (userProfile.answers.length > 0) {\n        setCurrentQuestionIndex(0);\n        setCurrentAnswer(userProfile.answers[0] || '');\n      }\n    }\n\n    // Clear edit mode flag\n    localStorage.removeItem('editingProfile');\n  }, []);\n\n  // When question index changes in edit mode, load the saved answer\n  useEffect(() => {\n    if (isEditMode && userAnswers.length > currentQuestionIndex) {\n      setCurrentAnswer(userAnswers[currentQuestionIndex] || '');\n    }\n  }, [currentQuestionIndex, isEditMode, userAnswers]);\n\n  // Handle profile form changes\n  const handleProfileChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setProfileForm({\n      ...profileForm,\n      [name]: value\n    });\n  };\n\n  // Handle profile picture upload\n  const handlePictureChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      const file = e.target.files[0];\n      setProfilePicture(file);\n      setProfilePicturePreview(URL.createObjectURL(file));\n    }\n  };\n\n  // Handle submitting basic profile info\n  const handleProfileSubmit = async () => {\n    setLoading(true);\n    try {\n      // If in edit mode, just advance to questions\n      if (isEditMode) {\n        setActiveStep(1);\n        setLoading(false);\n        return;\n      }\n      const formData = new FormData();\n      formData.append('name', profileForm.name);\n      formData.append('age', profileForm.age);\n      formData.append('interests', profileForm.interests);\n      if (profilePicture) {\n        formData.append('profilePicture', profilePicture);\n      }\n      const response = await createProfile(formData);\n      setUserId(response.id);\n      setActiveStep(1);\n    } catch (error) {\n      console.error('Error creating profile:', error);\n      // Handle error (show message to user)\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle answer to current question\n  const handleAnswerSubmit = async () => {\n    if (!userId && !isEditMode) return;\n    setLoading(true);\n    try {\n      // In edit mode, update the userAnswers array\n      if (isEditMode) {\n        const updatedAnswers = [...userAnswers];\n        updatedAnswers[currentQuestionIndex] = currentAnswer;\n        setUserAnswers(updatedAnswers);\n\n        // Update in localStorage\n        const userProfile = getUserProfile();\n        userProfile.answers[currentQuestionIndex] = currentAnswer;\n        localStorage.setItem('userProfile', JSON.stringify(userProfile));\n        localStorage.setItem('userAnswers', JSON.stringify(userProfile.answers));\n      } else {\n        // Not in edit mode, save to API\n        await saveQuestionAnswer({\n          userId: userId || 1,\n          questionNumber: currentQuestionIndex + 1,\n          answer: currentAnswer\n        });\n      }\n\n      // Track completed questions\n      if (!completedQuestions.includes(currentQuestionIndex)) {\n        setCompletedQuestions([...completedQuestions, currentQuestionIndex]);\n      }\n\n      // Reset answer and move to next question\n      setCurrentAnswer('');\n      if (currentQuestionIndex < questions.length - 1) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n      } else {\n        // All questions completed\n        setActiveStep(2);\n        setTimeout(() => {\n          navigate('/loading');\n        }, 2000);\n      }\n    } catch (error) {\n      console.error('Error saving answer:', error);\n      // Handle error\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Calculate progress for the questions\n  const questionProgress = Math.round(completedQuestions.length / questions.length * 100);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        textAlign: \"center\",\n        children: \"Create Your Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n        activeStep: activeStep,\n        sx: {\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Step, {\n          children: /*#__PURE__*/_jsxDEV(StepLabel, {\n            children: \"Basic Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Step, {\n          children: /*#__PURE__*/_jsxDEV(StepLabel, {\n            children: \"36 Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Step, {\n          children: /*#__PURE__*/_jsxDEV(StepLabel, {\n            children: \"Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), activeStep === 0 && /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            gutterBottom: true,\n            children: \"Tell us about yourself\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: 3,\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Name\",\n              name: \"name\",\n              value: profileForm.name,\n              onChange: handleProfileChange,\n              required: true,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Age\",\n              name: \"age\",\n              type: \"number\",\n              value: profileForm.age,\n              onChange: handleProfileChange,\n              required: true,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Interests (comma separated)\",\n              name: \"interests\",\n              value: profileForm.interests,\n              onChange: handleProfileChange,\n              multiline: true,\n              rows: 3,\n              fullWidth: true,\n              placeholder: \"Reading, hiking, cooking, etc.\",\n              helperText: \"Help us match you with compatible people by sharing your interests\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2,\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                children: \"Profile Picture\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this), profilePicturePreview ? /*#__PURE__*/_jsxDEV(Avatar, {\n                src: profilePicturePreview,\n                sx: {\n                  width: 150,\n                  height: 150,\n                  mb: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n                sx: {\n                  width: 150,\n                  height: 150,\n                  mb: 2,\n                  bgcolor: 'grey.300'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                component: \"label\",\n                startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 32\n                }, this),\n                children: [\"Upload Photo\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  hidden: true,\n                  accept: \"image/*\",\n                  onChange: handlePictureChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              size: \"large\",\n              onClick: handleProfileSubmit,\n              disabled: !profileForm.name || !profileForm.age || loading,\n              sx: {\n                mt: 2\n              },\n              children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 30\n              }, this) : 'Continue to Questions'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), activeStep === 1 && /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"h2\",\n              children: [\"Question \", currentQuestionIndex + 1, \" of \", questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [\"Progress: \", questionProgress, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              py: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                mb: 3\n              },\n              children: questions[currentQuestionIndex]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Your Answer\",\n              value: currentAnswer,\n              onChange: e => setCurrentAnswer(e.target.value),\n              multiline: true,\n              rows: 4,\n              fullWidth: true,\n              placeholder: \"Type your answer here...\",\n              sx: {\n                mb: 3\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              size: \"large\",\n              onClick: handleAnswerSubmit,\n              disabled: !currentAnswer || loading,\n              fullWidth: true,\n              children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 30\n              }, this) : 'Next Question'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this), activeStep === 2 && /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          p: 4,\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(CheckIcon, {\n            color: \"success\",\n            sx: {\n              fontSize: 60,\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            gutterBottom: true,\n            children: \"Profile Creation Complete!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: \"Thank you for answering all questions. We're now using these to find your matches!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n            sx: {\n              mt: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileCreation, \"HmUgtg3R42mk1a/eVbKOvu1QBYE=\", false, function () {\n  return [useNavigate];\n});\n_c = ProfileCreation;\nexport default ProfileCreation;\nvar _c;\n$RefreshReg$(_c, \"ProfileCreation\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Container","Typography","Box","TextField","Button","Stepper","Step","StepLabel","Card","CardContent","CircularProgress","Avatar","CloudUploadIcon","CheckIcon","questions","createProfile","saveQuestionAnswer","getUserProfile","jsxDEV","_jsxDEV","ProfileCreation","_s","navigate","activeStep","setActiveStep","loading","setLoading","profileForm","setProfileForm","name","age","interests","profilePicture","setProfilePicture","profilePicturePreview","setProfilePicturePreview","currentQuestionIndex","setCurrentQuestionIndex","currentAnswer","setCurrentAnswer","userId","setUserId","completedQuestions","setCompletedQuestions","isEditMode","setIsEditMode","userAnswers","setUserAnswers","editMode","localStorage","getItem","userProfile","toString","join","storedUserId","parseInt","answers","completedIndices","map","_","index","length","removeItem","handleProfileChange","e","value","target","handlePictureChange","files","file","URL","createObjectURL","handleProfileSubmit","formData","FormData","append","response","id","error","console","handleAnswerSubmit","updatedAnswers","setItem","JSON","stringify","questionNumber","answer","includes","setTimeout","questionProgress","Math","round","maxWidth","children","sx","py","variant","component","gutterBottom","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","mb","p","display","flexDirection","gap","mt","label","onChange","required","fullWidth","type","multiline","rows","placeholder","helperText","alignItems","src","width","height","bgcolor","startIcon","hidden","accept","color","size","onClick","disabled","justifyContent","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/omals/Documents/hacklondon 2025/dating-app/src/pages/ProfileCreation.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Container,\n  Typography,\n  Box,\n  TextField,\n  Button,\n  Stepper,\n  Step,\n  StepLabel,\n  Card,\n  CardContent,\n  CircularProgress,\n  Avatar\n} from '@mui/material';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport CheckIcon from '@mui/icons-material/Check';\nimport PhotoCamera from '@mui/icons-material/PhotoCamera';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport { questions } from '../utils/questions.ts';\nimport { createProfile, saveQuestionAnswer } from '../services/api.ts';\nimport { getUserProfile } from '../utils/userProfile.ts';\n\nconst ProfileCreation: React.FC = () => {\n  const navigate = useNavigate();\n  const [activeStep, setActiveStep] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [profileForm, setProfileForm] = useState({\n    name: '',\n    age: '',\n    interests: '',\n  });\n  const [profilePicture, setProfilePicture] = useState<File | null>(null);\n  const [profilePicturePreview, setProfilePicturePreview] = useState<string | null>(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [currentAnswer, setCurrentAnswer] = useState('');\n  const [userId, setUserId] = useState<number | null>(null);\n  const [completedQuestions, setCompletedQuestions] = useState<number[]>([]);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [userAnswers, setUserAnswers] = useState<string[]>([]);\n\n  // Check if in edit mode when component mounts\n  useEffect(() => {\n    const editMode = localStorage.getItem('editingProfile') === 'true';\n    setIsEditMode(editMode);\n    \n    if (editMode) {\n      // Load existing profile data\n      const userProfile = getUserProfile();\n      setProfileForm({\n        name: userProfile.name,\n        age: userProfile.age.toString(),\n        interests: userProfile.interests.join(', '),\n      });\n      \n      if (userProfile.profilePicture) {\n        setProfilePicturePreview(userProfile.profilePicture);\n      }\n      \n      // Set user ID from localStorage\n      const storedUserId = localStorage.getItem('currentUserId');\n      if (storedUserId) {\n        setUserId(parseInt(storedUserId));\n      }\n      \n      // Load answers\n      setUserAnswers(userProfile.answers || []);\n      \n      // Mark all questions as completed\n      const completedIndices = userProfile.answers.map((_, index) => index);\n      setCompletedQuestions(completedIndices);\n      \n      // If we have answers, set the current question to the first one and show its answer\n      if (userProfile.answers.length > 0) {\n        setCurrentQuestionIndex(0);\n        setCurrentAnswer(userProfile.answers[0] || '');\n      }\n    }\n    \n    // Clear edit mode flag\n    localStorage.removeItem('editingProfile');\n  }, []);\n\n  // When question index changes in edit mode, load the saved answer\n  useEffect(() => {\n    if (isEditMode && userAnswers.length > currentQuestionIndex) {\n      setCurrentAnswer(userAnswers[currentQuestionIndex] || '');\n    }\n  }, [currentQuestionIndex, isEditMode, userAnswers]);\n\n  // Handle profile form changes\n  const handleProfileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setProfileForm({\n      ...profileForm,\n      [name]: value\n    });\n  };\n\n  // Handle profile picture upload\n  const handlePictureChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files[0]) {\n      const file = e.target.files[0];\n      setProfilePicture(file);\n      setProfilePicturePreview(URL.createObjectURL(file));\n    }\n  };\n\n  // Handle submitting basic profile info\n  const handleProfileSubmit = async () => {\n    setLoading(true);\n    try {\n      // If in edit mode, just advance to questions\n      if (isEditMode) {\n        setActiveStep(1);\n        setLoading(false);\n        return;\n      }\n      \n      const formData = new FormData();\n      formData.append('name', profileForm.name);\n      formData.append('age', profileForm.age);\n      formData.append('interests', profileForm.interests);\n      \n      if (profilePicture) {\n        formData.append('profilePicture', profilePicture);\n      }\n\n      const response = await createProfile(formData);\n      setUserId(response.id);\n      setActiveStep(1);\n    } catch (error) {\n      console.error('Error creating profile:', error);\n      // Handle error (show message to user)\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle answer to current question\n  const handleAnswerSubmit = async () => {\n    if (!userId && !isEditMode) return;\n    \n    setLoading(true);\n    try {\n      // In edit mode, update the userAnswers array\n      if (isEditMode) {\n        const updatedAnswers = [...userAnswers];\n        updatedAnswers[currentQuestionIndex] = currentAnswer;\n        setUserAnswers(updatedAnswers);\n        \n        // Update in localStorage\n        const userProfile = getUserProfile();\n        userProfile.answers[currentQuestionIndex] = currentAnswer;\n        localStorage.setItem('userProfile', JSON.stringify(userProfile));\n        localStorage.setItem('userAnswers', JSON.stringify(userProfile.answers));\n      } else {\n        // Not in edit mode, save to API\n        await saveQuestionAnswer({\n          userId: userId || 1,\n          questionNumber: currentQuestionIndex + 1,\n          answer: currentAnswer\n        });\n      }\n\n      // Track completed questions\n      if (!completedQuestions.includes(currentQuestionIndex)) {\n        setCompletedQuestions([...completedQuestions, currentQuestionIndex]);\n      }\n      \n      // Reset answer and move to next question\n      setCurrentAnswer('');\n      \n      if (currentQuestionIndex < questions.length - 1) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n      } else {\n        // All questions completed\n        setActiveStep(2);\n        setTimeout(() => {\n          navigate('/loading');\n        }, 2000);\n      }\n    } catch (error) {\n      console.error('Error saving answer:', error);\n      // Handle error\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Calculate progress for the questions\n  const questionProgress = Math.round((completedQuestions.length / questions.length) * 100);\n\n  return (\n    <Container maxWidth=\"md\">\n      <Box sx={{ py: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom textAlign=\"center\">\n          Create Your Profile\n        </Typography>\n\n        <Stepper activeStep={activeStep} sx={{ mb: 4 }}>\n          <Step>\n            <StepLabel>Basic Info</StepLabel>\n          </Step>\n          <Step>\n            <StepLabel>36 Questions</StepLabel>\n          </Step>\n          <Step>\n            <StepLabel>Complete</StepLabel>\n          </Step>\n        </Stepper>\n\n        {activeStep === 0 && (\n          <Card sx={{ p: 2 }}>\n            <CardContent>\n              <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n                Tell us about yourself\n              </Typography>\n              \n              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3, mt: 2 }}>\n                <TextField\n                  label=\"Name\"\n                  name=\"name\"\n                  value={profileForm.name}\n                  onChange={handleProfileChange}\n                  required\n                  fullWidth\n                />\n                \n                <TextField\n                  label=\"Age\"\n                  name=\"age\"\n                  type=\"number\"\n                  value={profileForm.age}\n                  onChange={handleProfileChange}\n                  required\n                  fullWidth\n                />\n                \n                <TextField\n                  label=\"Interests (comma separated)\"\n                  name=\"interests\"\n                  value={profileForm.interests}\n                  onChange={handleProfileChange}\n                  multiline\n                  rows={3}\n                  fullWidth\n                  placeholder=\"Reading, hiking, cooking, etc.\"\n                  helperText=\"Help us match you with compatible people by sharing your interests\"\n                />\n\n                <Box sx={{ mt: 2, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                  <Typography variant=\"subtitle1\" gutterBottom>\n                    Profile Picture\n                  </Typography>\n                  \n                  {profilePicturePreview ? (\n                    <Avatar \n                      src={profilePicturePreview} \n                      sx={{ width: 150, height: 150, mb: 2 }}\n                    />\n                  ) : (\n                    <Avatar \n                      sx={{ width: 150, height: 150, mb: 2, bgcolor: 'grey.300' }}\n                    />\n                  )}\n                  \n                  <Button\n                    variant=\"outlined\"\n                    component=\"label\"\n                    startIcon={<CloudUploadIcon />}\n                  >\n                    Upload Photo\n                    <input\n                      type=\"file\"\n                      hidden\n                      accept=\"image/*\"\n                      onChange={handlePictureChange}\n                    />\n                  </Button>\n                </Box>\n\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  onClick={handleProfileSubmit}\n                  disabled={!profileForm.name || !profileForm.age || loading}\n                  sx={{ mt: 2 }}\n                >\n                  {loading ? <CircularProgress size={24} /> : 'Continue to Questions'}\n                </Button>\n              </Box>\n            </CardContent>\n          </Card>\n        )}\n\n        {activeStep === 1 && (\n          <Card sx={{ p: 2 }}>\n            <CardContent>\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n                <Typography variant=\"h5\" component=\"h2\">\n                  Question {currentQuestionIndex + 1} of {questions.length}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Progress: {questionProgress}%\n                </Typography>\n              </Box>\n\n              <Box sx={{ py: 2 }}>\n                <Typography variant=\"h6\" sx={{ mb: 3 }}>\n                  {questions[currentQuestionIndex]}\n                </Typography>\n                \n                <TextField\n                  label=\"Your Answer\"\n                  value={currentAnswer}\n                  onChange={(e) => setCurrentAnswer(e.target.value)}\n                  multiline\n                  rows={4}\n                  fullWidth\n                  placeholder=\"Type your answer here...\"\n                  sx={{ mb: 3 }}\n                />\n                \n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  onClick={handleAnswerSubmit}\n                  disabled={!currentAnswer || loading}\n                  fullWidth\n                >\n                  {loading ? <CircularProgress size={24} /> : 'Next Question'}\n                </Button>\n              </Box>\n            </CardContent>\n          </Card>\n        )}\n\n        {activeStep === 2 && (\n          <Card sx={{ p: 4, textAlign: 'center' }}>\n            <CardContent>\n              <CheckIcon color=\"success\" sx={{ fontSize: 60, mb: 2 }} />\n              <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n                Profile Creation Complete!\n              </Typography>\n              <Typography variant=\"body1\">\n                Thank you for answering all questions. We're now using these to find your matches!\n              </Typography>\n              <CircularProgress sx={{ mt: 4 }} />\n            </CardContent>\n          </Card>\n        )}\n      </Box>\n    </Container>\n  );\n};\n\nexport default ProfileCreation; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}