{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omals\\\\Documents\\\\GitHub\\\\LLM\\\\HackLondon Final submission\\\\dating-app\\\\src\\\\pages\\\\AIChatSimulation.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Typography, Box, Button, Paper, CircularProgress, Alert } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\n// Define the two personalities\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst personalities = [{\n  name: \"Alex\",\n  color: \"#3f51b5\",\n  description: \"Thoughtful, philosophical, enjoys deep conversations\"\n}, {\n  name: \"Jordan\",\n  color: \"#f50057\",\n  description: \"Energetic, adventurous, loves sharing experiences\"\n}];\n\n// Simple conversation starters\nconst STARTERS = [\"What gives life meaning?\", \"Where would you travel if you could go anywhere?\", \"Is technology bringing people closer or pushing them apart?\", \"What's a book that changed your view of the world?\", \"What's something you've changed your mind about recently?\"];\nconst AIChatSimulation = () => {\n  _s();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n  const [exchangeCount, setExchangeCount] = useState(0);\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Add a message to the UI\n  const addMessage = (speakerIndex, text) => {\n    const newMessage = {\n      id: Date.now(),\n      speaker: speakerIndex,\n      text: text\n    };\n    setMessages(prev => [...prev, newMessage]);\n    return newMessage;\n  };\n\n  // Use a simpler approach with hardcoded responses for reliability\n  const startConversation = async () => {\n    setMessages([]);\n    setError(null);\n    setIsRunning(true);\n    setExchangeCount(0);\n\n    // Choose a random starter\n    const starter = STARTERS[Math.floor(Math.random() * STARTERS.length)];\n    console.log(\"Starting with:\", starter);\n\n    // Add the starter message from Alex\n    addMessage(0, starter);\n\n    // Simulate conversation\n    simulateConversation(starter);\n  };\n\n  // Simulate a conversation with hardcoded responses\n  const simulateConversation = async starter => {\n    // Pre-generated responses for each conversation starter\n    const responseMap = {\n      \"What gives life meaning?\": [[\"Life's meaning comes from the connections we form with others and our pursuit of experiences that challenge and fulfill us. It's in these moments of connection and growth that I find my deepest sense of purpose.\", \"I believe meaning emerges through our relationships and how we contribute to something larger than ourselves. The books and art that move us often speak to this universal search.\", \"For me, meaning is found in how we choose to engage with life's big questions. Philosophy teaches us there's no single answer, but rather a personal journey of discovery.\"], [\"Life is all about adventures and pushing boundaries! I find meaning in collecting amazing experiences - like when I went skydiving and felt completely alive. It's about creating stories worth telling!\", \"The connections we make with people around the world give life meaning! During my backpacking trip last year, I met someone who completely changed my perspective on what matters.\", \"For me, it's about impact and joy! Whether I'm climbing a mountain or helping build houses in developing countries, I find meaning in stepping outside my comfort zone.\"]],\n      \"Where would you travel if you could go anywhere?\": [[\"I'd visit Kyoto, Japan during autumn. The intersection of ancient temples, philosophical traditions, and natural beauty creates a setting for both reflection and cultural appreciation.\", \"I'm drawn to the libraries and cafÃ©s of Paris. Walking the same streets as great thinkers and writers while exploring art museums would be intellectually nourishing.\", \"The fjords of Norway appeal to me. There's something profound about experiencing such dramatic natural landscapes that puts human existence into perspective.\"], [\"New Zealand, without a doubt! The opportunity to bungee jump, hike volcanoes, and kayak through those incredible landscapes would be the ultimate adventure!\", \"I'd backpack through Southeast Asia! The mix of beaches, jungles, ancient temples, and street food creates the perfect environment for spontaneous adventures.\", \"Antarctica! It's the ultimate frontier - imagine camping on ice and seeing those massive glaciers up close. That would be an experience few people ever get!\"]],\n      \"Is technology bringing people closer or pushing them apart?\": [[\"It's paradoxical - technology connects us across vast distances yet often creates a sense of isolation. I find that meaningful relationships require presence that screens sometimes diminish.\", \"Technology gives us tools for connection, but the quality of those connections depends on how mindfully we use them. Digital interactions can complement but rarely replace in-person depth.\", \"I see technology as neutral - it amplifies our existing tendencies. The question is whether we're using it intentionally to deepen relationships or as a substitute for authentic connection.\"], [\"Technology is amazing for bringing people together! I've made friends all over the world through social media, and we've actually met up during my travels. It's expanded my world!\", \"It's definitely bringing us closer! Last month I organized a mountain biking trip with people I met in an online community - we went from strangers to close friends in days!\", \"Both! But I focus on the positive - video calls with friends while I'm traveling, apps that connect like-minded adventurers, sharing experiences instantly. It's revolutionary!\"]],\n      \"What's a book that changed your view of the world?\": [[\"\\\"Man's Search for Meaning\\\" by Viktor Frankl profoundly affected me. His insights on finding purpose even in suffering changed how I approach life's challenges and understand resilience.\", \"Dostoevsky's \\\"The Brothers Karamazov\\\" transformed my understanding of human nature. Its exploration of faith, doubt, and morality continues to resonate in how I see people's contradictions.\", \"\\\"Sapiens\\\" by Yuval Noah Harari shifted my perspective on human history and our collective narratives. It made me question many assumptions about society that I had taken for granted.\"], [\"\\\"Into the Wild\\\" completely changed me! After reading it, I took my first solo hiking trip - it taught me about freedom and challenging social expectations in a way I'd never considered.\", \"\\\"The Alchemist\\\" inspired me to follow my dreams! It's about this shepherd who travels the world seeking treasure, only to find it was within him all along. Classic but life-changing!\", \"\\\"Born to Run\\\" revolutionized how I think about human potential! I switched to barefoot running after reading it and ended up completing my first ultramarathon last year!\"]],\n      \"What's something you've changed your mind about recently?\": [[\"I've reconsidered my view on routine. I used to think spontaneity was essential for creativity, but I've found that thoughtful rituals create the mental space needed for deeper thinking.\", \"My perspective on solitude has evolved. I once saw it primarily as isolation, but now I recognize it as an opportunity for self-discovery and processing complex emotions.\", \"I've changed my mind about digital minimalism. While I valued disconnection, I now see that mindful engagement with technology can enhance meaningful relationships and learning.\"], [\"I used to think extreme sports were just about adrenaline, but after taking up rock climbing, I realized they're about mindfulness and being completely present in the moment!\", \"Group travel! I was always a solo adventurer, but after joining a hiking group last month, I discovered how sharing experiences with others can make them even more amazing!\", \"I changed my mind about planning everything in advance. My most memorable trip happened when my flight got canceled, and I had to improvise. Now I leave room for spontaneity!\"]]\n    };\n\n    // Fallback for any unmatched starter\n    const fallbackResponses = responseMap[\"What gives life meaning?\"];\n\n    // Get responses for this starter or use fallback\n    const responses = responseMap[starter] || fallbackResponses;\n\n    // Show Jordan thinking\n    addMessage(1, \"...\");\n\n    // First response from Jordan\n    setTimeout(() => {\n      // Remove typing indicator\n      setMessages(prev => prev.filter(m => m.text !== \"...\"));\n\n      // Add Jordan's response - pick one randomly\n      const jordanResponses = responses[1];\n      const jordanResponse = jordanResponses[Math.floor(Math.random() * jordanResponses.length)];\n      addMessage(1, jordanResponse);\n\n      // Show Alex thinking\n      setTimeout(() => {\n        addMessage(0, \"...\");\n\n        // Second response from Alex\n        setTimeout(() => {\n          // Remove typing indicator\n          setMessages(prev => prev.filter(m => m.text !== \"...\"));\n\n          // Add Alex's response\n          const alexResponses = responses[0];\n          const alexResponse = alexResponses[Math.floor(Math.random() * alexResponses.length)];\n          addMessage(0, alexResponse);\n\n          // Continue the conversation\n          continueDialogue(responses, 2);\n        }, 2000);\n      }, 1000);\n    }, 1500);\n  };\n\n  // Continue the dialogue with more exchanges\n  const continueDialogue = (responses, currentExchange) => {\n    if (currentExchange >= 10 || !isRunning) {\n      setIsRunning(false);\n      return;\n    }\n    const speakerIndex = currentExchange % 2; // Alternates between 0 and 1\n\n    // Show typing indicator\n    setTimeout(() => {\n      addMessage(speakerIndex, \"...\");\n\n      // Add response after delay\n      setTimeout(() => {\n        // Remove typing indicator\n        setMessages(prev => prev.filter(m => m.text !== \"...\"));\n\n        // Add response - choose response with modulo to cycle through available responses\n        const speakerResponses = responses[speakerIndex];\n        const responseIndex = Math.floor(currentExchange / 2) % speakerResponses.length;\n        const response = speakerResponses[responseIndex];\n        addMessage(speakerIndex, response);\n\n        // Update exchange count if needed\n        if (speakerIndex === 1) {\n          setExchangeCount(prev => prev + 1);\n        }\n\n        // Continue the conversation\n        continueDialogue(responses, currentExchange + 1);\n      }, 2000);\n    }, 1500);\n  };\n\n  // Stop the conversation\n  const stopConversation = () => {\n    setIsRunning(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 22\n        }, this),\n        onClick: () => navigate('/'),\n        sx: {\n          mb: 3\n        },\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        textAlign: \"center\",\n        children: \"AI Conversation Simulation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          gap: 2,\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: startConversation,\n          disabled: isRunning,\n          children: \"Start Conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), isRunning && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"error\",\n          onClick: stopConversation,\n          children: \"Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), messages.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        textAlign: \"center\",\n        sx: {\n          mb: 2\n        },\n        children: [\"Conversation exchanges: \", exchangeCount, \"/5\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          height: '60vh',\n          p: 2,\n          mb: 2,\n          overflowY: 'auto',\n          bgcolor: '#f5f5f5'\n        },\n        children: [messages.map(message => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: message.speaker === 0 ? 'flex-start' : 'flex-end',\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              maxWidth: '80%',\n              bgcolor: personalities[message.speaker].color,\n              color: 'white',\n              p: 2,\n              borderRadius: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              sx: {\n                opacity: 0.9,\n                mb: 0.5\n              },\n              children: personalities[message.speaker].name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: message.text === \"...\" ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 16,\n                color: \"inherit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 21\n              }, this) : message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: personalities.map((person, index) => /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            color: person.color\n          },\n          children: [person.name, \": \", messages.filter(m => m.speaker === index && m.text !== \"...\").length, \" messages\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n};\n_s(AIChatSimulation, \"vO8bxMv1KRz1mAEqSA9pgYE/T0I=\", false, function () {\n  return [useNavigate];\n});\n_c = AIChatSimulation;\nexport default AIChatSimulation;\nvar _c;\n$RefreshReg$(_c, \"AIChatSimulation\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","Container","Typography","Box","Button","Paper","CircularProgress","Alert","ArrowBackIcon","jsxDEV","_jsxDEV","personalities","name","color","description","STARTERS","AIChatSimulation","_s","navigate","messages","setMessages","isRunning","setIsRunning","isLoading","setIsLoading","error","setError","messagesEndRef","exchangeCount","setExchangeCount","_messagesEndRef$curre","current","scrollIntoView","behavior","addMessage","speakerIndex","text","newMessage","id","Date","now","speaker","prev","startConversation","starter","Math","floor","random","length","console","log","simulateConversation","responseMap","fallbackResponses","responses","setTimeout","filter","m","jordanResponses","jordanResponse","alexResponses","alexResponse","continueDialogue","currentExchange","speakerResponses","responseIndex","response","stopConversation","maxWidth","children","sx","py","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","mb","variant","gutterBottom","textAlign","severity","display","justifyContent","gap","disabled","elevation","height","p","overflowY","bgcolor","map","message","flexDirection","alignItems","borderRadius","opacity","size","ref","person","index","_c","$RefreshReg$"],"sources":["C:/Users/omals/Documents/GitHub/LLM/HackLondon Final submission/dating-app/src/pages/AIChatSimulation.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  Button,\r\n  Paper,\r\n  CircularProgress,\r\n  Alert\r\n} from '@mui/material';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n\r\n// Define the two personalities\r\nconst personalities = [\r\n  {\r\n    name: \"Alex\",\r\n    color: \"#3f51b5\",\r\n    description: \"Thoughtful, philosophical, enjoys deep conversations\"\r\n  },\r\n  {\r\n    name: \"Jordan\",\r\n    color: \"#f50057\", \r\n    description: \"Energetic, adventurous, loves sharing experiences\"\r\n  }\r\n];\r\n\r\n// Simple conversation starters\r\nconst STARTERS = [\r\n  \"What gives life meaning?\",\r\n  \"Where would you travel if you could go anywhere?\",\r\n  \"Is technology bringing people closer or pushing them apart?\",\r\n  \"What's a book that changed your view of the world?\",\r\n  \"What's something you've changed your mind about recently?\"\r\n];\r\n\r\nconst AIChatSimulation = () => {\r\n  const navigate = useNavigate();\r\n  const [messages, setMessages] = useState([]);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n  const [exchangeCount, setExchangeCount] = useState(0);\r\n\r\n  // Scroll to bottom when messages change\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  // Add a message to the UI\r\n  const addMessage = (speakerIndex, text) => {\r\n    const newMessage = {\r\n      id: Date.now(),\r\n      speaker: speakerIndex,\r\n      text: text\r\n    };\r\n    \r\n    setMessages(prev => [...prev, newMessage]);\r\n    return newMessage;\r\n  };\r\n\r\n  // Use a simpler approach with hardcoded responses for reliability\r\n  const startConversation = async () => {\r\n    setMessages([]);\r\n    setError(null);\r\n    setIsRunning(true);\r\n    setExchangeCount(0);\r\n    \r\n    // Choose a random starter\r\n    const starter = STARTERS[Math.floor(Math.random() * STARTERS.length)];\r\n    console.log(\"Starting with:\", starter);\r\n    \r\n    // Add the starter message from Alex\r\n    addMessage(0, starter);\r\n    \r\n    // Simulate conversation\r\n    simulateConversation(starter);\r\n  };\r\n\r\n  // Simulate a conversation with hardcoded responses\r\n  const simulateConversation = async (starter) => {\r\n    // Pre-generated responses for each conversation starter\r\n    const responseMap = {\r\n      \"What gives life meaning?\": [\r\n        [\r\n          \"Life's meaning comes from the connections we form with others and our pursuit of experiences that challenge and fulfill us. It's in these moments of connection and growth that I find my deepest sense of purpose.\",\r\n          \"I believe meaning emerges through our relationships and how we contribute to something larger than ourselves. The books and art that move us often speak to this universal search.\",\r\n          \"For me, meaning is found in how we choose to engage with life's big questions. Philosophy teaches us there's no single answer, but rather a personal journey of discovery.\"\r\n        ],\r\n        [\r\n          \"Life is all about adventures and pushing boundaries! I find meaning in collecting amazing experiences - like when I went skydiving and felt completely alive. It's about creating stories worth telling!\",\r\n          \"The connections we make with people around the world give life meaning! During my backpacking trip last year, I met someone who completely changed my perspective on what matters.\",\r\n          \"For me, it's about impact and joy! Whether I'm climbing a mountain or helping build houses in developing countries, I find meaning in stepping outside my comfort zone.\"\r\n        ]\r\n      ],\r\n      \"Where would you travel if you could go anywhere?\": [\r\n        [\r\n          \"I'd visit Kyoto, Japan during autumn. The intersection of ancient temples, philosophical traditions, and natural beauty creates a setting for both reflection and cultural appreciation.\",\r\n          \"I'm drawn to the libraries and cafÃ©s of Paris. Walking the same streets as great thinkers and writers while exploring art museums would be intellectually nourishing.\",\r\n          \"The fjords of Norway appeal to me. There's something profound about experiencing such dramatic natural landscapes that puts human existence into perspective.\"\r\n        ],\r\n        [\r\n          \"New Zealand, without a doubt! The opportunity to bungee jump, hike volcanoes, and kayak through those incredible landscapes would be the ultimate adventure!\",\r\n          \"I'd backpack through Southeast Asia! The mix of beaches, jungles, ancient temples, and street food creates the perfect environment for spontaneous adventures.\",\r\n          \"Antarctica! It's the ultimate frontier - imagine camping on ice and seeing those massive glaciers up close. That would be an experience few people ever get!\"\r\n        ]\r\n      ],\r\n      \"Is technology bringing people closer or pushing them apart?\": [\r\n        [\r\n          \"It's paradoxical - technology connects us across vast distances yet often creates a sense of isolation. I find that meaningful relationships require presence that screens sometimes diminish.\",\r\n          \"Technology gives us tools for connection, but the quality of those connections depends on how mindfully we use them. Digital interactions can complement but rarely replace in-person depth.\",\r\n          \"I see technology as neutral - it amplifies our existing tendencies. The question is whether we're using it intentionally to deepen relationships or as a substitute for authentic connection.\"\r\n        ],\r\n        [\r\n          \"Technology is amazing for bringing people together! I've made friends all over the world through social media, and we've actually met up during my travels. It's expanded my world!\",\r\n          \"It's definitely bringing us closer! Last month I organized a mountain biking trip with people I met in an online community - we went from strangers to close friends in days!\",\r\n          \"Both! But I focus on the positive - video calls with friends while I'm traveling, apps that connect like-minded adventurers, sharing experiences instantly. It's revolutionary!\"\r\n        ]\r\n      ],\r\n      \"What's a book that changed your view of the world?\": [\r\n        [\r\n          \"\\\"Man's Search for Meaning\\\" by Viktor Frankl profoundly affected me. His insights on finding purpose even in suffering changed how I approach life's challenges and understand resilience.\",\r\n          \"Dostoevsky's \\\"The Brothers Karamazov\\\" transformed my understanding of human nature. Its exploration of faith, doubt, and morality continues to resonate in how I see people's contradictions.\",\r\n          \"\\\"Sapiens\\\" by Yuval Noah Harari shifted my perspective on human history and our collective narratives. It made me question many assumptions about society that I had taken for granted.\"\r\n        ],\r\n        [\r\n          \"\\\"Into the Wild\\\" completely changed me! After reading it, I took my first solo hiking trip - it taught me about freedom and challenging social expectations in a way I'd never considered.\",\r\n          \"\\\"The Alchemist\\\" inspired me to follow my dreams! It's about this shepherd who travels the world seeking treasure, only to find it was within him all along. Classic but life-changing!\",\r\n          \"\\\"Born to Run\\\" revolutionized how I think about human potential! I switched to barefoot running after reading it and ended up completing my first ultramarathon last year!\"\r\n        ]\r\n      ],\r\n      \"What's something you've changed your mind about recently?\": [\r\n        [\r\n          \"I've reconsidered my view on routine. I used to think spontaneity was essential for creativity, but I've found that thoughtful rituals create the mental space needed for deeper thinking.\",\r\n          \"My perspective on solitude has evolved. I once saw it primarily as isolation, but now I recognize it as an opportunity for self-discovery and processing complex emotions.\",\r\n          \"I've changed my mind about digital minimalism. While I valued disconnection, I now see that mindful engagement with technology can enhance meaningful relationships and learning.\"\r\n        ],\r\n        [\r\n          \"I used to think extreme sports were just about adrenaline, but after taking up rock climbing, I realized they're about mindfulness and being completely present in the moment!\",\r\n          \"Group travel! I was always a solo adventurer, but after joining a hiking group last month, I discovered how sharing experiences with others can make them even more amazing!\",\r\n          \"I changed my mind about planning everything in advance. My most memorable trip happened when my flight got canceled, and I had to improvise. Now I leave room for spontaneity!\"\r\n        ]\r\n      ]\r\n    };\r\n    \r\n    // Fallback for any unmatched starter\r\n    const fallbackResponses = responseMap[\"What gives life meaning?\"];\r\n    \r\n    // Get responses for this starter or use fallback\r\n    const responses = responseMap[starter] || fallbackResponses;\r\n    \r\n    // Show Jordan thinking\r\n    addMessage(1, \"...\");\r\n    \r\n    // First response from Jordan\r\n    setTimeout(() => {\r\n      // Remove typing indicator\r\n      setMessages(prev => prev.filter(m => m.text !== \"...\"));\r\n      \r\n      // Add Jordan's response - pick one randomly\r\n      const jordanResponses = responses[1];\r\n      const jordanResponse = jordanResponses[Math.floor(Math.random() * jordanResponses.length)];\r\n      addMessage(1, jordanResponse);\r\n      \r\n      // Show Alex thinking\r\n      setTimeout(() => {\r\n        addMessage(0, \"...\");\r\n        \r\n        // Second response from Alex\r\n        setTimeout(() => {\r\n          // Remove typing indicator\r\n          setMessages(prev => prev.filter(m => m.text !== \"...\"));\r\n          \r\n          // Add Alex's response\r\n          const alexResponses = responses[0];\r\n          const alexResponse = alexResponses[Math.floor(Math.random() * alexResponses.length)];\r\n          addMessage(0, alexResponse);\r\n          \r\n          // Continue the conversation\r\n          continueDialogue(responses, 2);\r\n        }, 2000);\r\n      }, 1000);\r\n    }, 1500);\r\n  };\r\n  \r\n  // Continue the dialogue with more exchanges\r\n  const continueDialogue = (responses, currentExchange) => {\r\n    if (currentExchange >= 10 || !isRunning) {\r\n      setIsRunning(false);\r\n      return;\r\n    }\r\n    \r\n    const speakerIndex = currentExchange % 2; // Alternates between 0 and 1\r\n    \r\n    // Show typing indicator\r\n    setTimeout(() => {\r\n      addMessage(speakerIndex, \"...\");\r\n      \r\n      // Add response after delay\r\n      setTimeout(() => {\r\n        // Remove typing indicator\r\n        setMessages(prev => prev.filter(m => m.text !== \"...\"));\r\n        \r\n        // Add response - choose response with modulo to cycle through available responses\r\n        const speakerResponses = responses[speakerIndex];\r\n        const responseIndex = Math.floor(currentExchange / 2) % speakerResponses.length;\r\n        const response = speakerResponses[responseIndex];\r\n        addMessage(speakerIndex, response);\r\n        \r\n        // Update exchange count if needed\r\n        if (speakerIndex === 1) {\r\n          setExchangeCount(prev => prev + 1);\r\n        }\r\n        \r\n        // Continue the conversation\r\n        continueDialogue(responses, currentExchange + 1);\r\n      }, 2000);\r\n    }, 1500);\r\n  };\r\n  \r\n  // Stop the conversation\r\n  const stopConversation = () => {\r\n    setIsRunning(false);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Box sx={{ py: 4 }}>\r\n        <Button \r\n          startIcon={<ArrowBackIcon />} \r\n          onClick={() => navigate('/')}\r\n          sx={{ mb: 3 }}\r\n        >\r\n          Back\r\n        </Button>\r\n        \r\n        <Typography variant=\"h4\" gutterBottom textAlign=\"center\">\r\n          AI Conversation Simulation\r\n        </Typography>\r\n        \r\n        {error && (\r\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        \r\n        {/* Controls */}\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', gap: 2, mb: 3 }}>\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            onClick={startConversation}\r\n            disabled={isRunning}\r\n          >\r\n            Start Conversation\r\n          </Button>\r\n          \r\n          {isRunning && (\r\n            <Button \r\n              variant=\"outlined\" \r\n              color=\"error\"\r\n              onClick={stopConversation}\r\n            >\r\n              Stop\r\n            </Button>\r\n          )}\r\n        </Box>\r\n        \r\n        {/* Exchange counter */}\r\n        {messages.length > 0 && (\r\n          <Typography variant=\"body2\" textAlign=\"center\" sx={{ mb: 2 }}>\r\n            Conversation exchanges: {exchangeCount}/5\r\n          </Typography>\r\n        )}\r\n        \r\n        {/* Chat display */}\r\n        <Paper \r\n          elevation={3} \r\n          sx={{ \r\n            height: '60vh', \r\n            p: 2, \r\n            mb: 2, \r\n            overflowY: 'auto',\r\n            bgcolor: '#f5f5f5' \r\n          }}\r\n        >\r\n          {messages.map((message) => (\r\n            <Box \r\n              key={message.id}\r\n              sx={{ \r\n                display: 'flex', \r\n                flexDirection: 'column',\r\n                alignItems: message.speaker === 0 ? 'flex-start' : 'flex-end',\r\n                mb: 2\r\n              }}\r\n            >\r\n              <Box \r\n                sx={{ \r\n                  maxWidth: '80%', \r\n                  bgcolor: personalities[message.speaker].color,\r\n                  color: 'white',\r\n                  p: 2, \r\n                  borderRadius: 2\r\n                }}\r\n              >\r\n                <Typography variant=\"subtitle2\" sx={{ opacity: 0.9, mb: 0.5 }}>\r\n                  {personalities[message.speaker].name}\r\n                </Typography>\r\n                \r\n                <Typography variant=\"body1\">\r\n                  {message.text === \"...\" ? (\r\n                    <CircularProgress size={16} color=\"inherit\" />\r\n                  ) : message.text}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </Paper>\r\n        \r\n        {/* Stats */}\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          {personalities.map((person, index) => (\r\n            <Typography key={index} variant=\"body2\" sx={{ color: person.color }}>\r\n              {person.name}: {messages.filter(m => m.speaker === index && m.text !== \"...\").length} messages\r\n            </Typography>\r\n          ))}\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AIChatSimulation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}