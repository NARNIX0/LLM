{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omals\\\\Documents\\\\GitHub\\\\LLM\\\\HackLondon Final submission\\\\dating-app\\\\src\\\\pages\\\\AIChatSimulation.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Typography, Box, Button, Paper, CircularProgress, Alert } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\n\n// Define the two personas for display purposes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst personalities = [{\n  name: \"Alex\",\n  color: \"#3f51b5\",\n  description: \"Thoughtful, philosophical, enjoys deep conversations\"\n}, {\n  name: \"Jordan\",\n  color: \"#f50057\",\n  description: \"Energetic, adventurous, loves sharing experiences\"\n}];\n\n// Simple conversation starters\nconst STARTERS = [\"What gives life meaning?\", \"Where would you travel if you could go anywhere?\", \"Is technology bringing people closer or pushing them apart?\", \"What's a book that changed your view of the world?\", \"What's something you've changed your mind about recently?\"];\nconst AIChatSimulation = () => {\n  _s();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n  const [exchangeCount, setExchangeCount] = useState(0);\n\n  // Backend API URL\n  const BACKEND_URL = \"http://localhost:8000\";\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Add a message to the UI\n  const addMessage = (speakerIndex, text) => {\n    const newMessage = {\n      id: Date.now(),\n      speaker: speakerIndex,\n      text: text\n    };\n    setMessages(prev => [...prev, newMessage]);\n    return newMessage;\n  };\n\n  // Get random starter\n  const getStarter = () => {\n    return STARTERS[Math.floor(Math.random() * STARTERS.length)];\n  };\n\n  // Start a new conversation using CrewAI backend\n  const startConversation = async () => {\n    setMessages([]);\n    setError(null);\n    setIsRunning(true);\n    setIsLoading(true);\n    setExchangeCount(0);\n\n    // Choose a random starter from Alex\n    const starter = getStarter();\n    console.log(\"Starting with:\", starter);\n\n    // Add the starter message from Alex\n    addMessage(0, starter);\n    try {\n      // Add loading indicators\n      addMessage(1, \"...\");\n\n      // Call the backend to get the first exchange\n      const response = await fetch(`${BACKEND_URL}/generate-conversation`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          starter: starter,\n          messages: []\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Backend error (${response.status}): ${errorText}`);\n      }\n      const data = await response.json();\n      console.log(\"Backend response:\", data);\n\n      // Remove loading indicator\n      setMessages(prev => prev.filter(m => m.text !== \"...\"));\n\n      // Add Jordan's response\n      addMessage(1, data.jordan_message);\n\n      // Add Alex's next response\n      addMessage(0, data.alex_message);\n\n      // Increment exchange count\n      setExchangeCount(1);\n\n      // Set up for continuing the conversation\n      setIsLoading(false);\n    } catch (err) {\n      console.error(\"Error starting conversation:\", err);\n      setError(`Error: ${err.message}`);\n\n      // Remove loading indicator\n      setMessages(prev => prev.filter(m => m.text !== \"...\"));\n\n      // Add fallback responses if backend fails\n      addMessage(1, \"That's a fascinating question! I went hiking in Nepal last year and spent a lot of time thinking about this exact topic. I found that what gives my life meaning is the collection of experiences and connections I make along the way.\");\n      setIsLoading(false);\n      setIsRunning(false);\n    }\n  };\n\n  // Continue the conversation\n  const continueConversation = async () => {\n    if (!isRunning || isLoading) return;\n    setIsLoading(true);\n    try {\n      // Add loading indicators for the next exchange\n      addMessage(1, \"...\");\n\n      // Format messages for the backend\n      const formattedMessages = messages.map(msg => ({\n        speaker: personalities[msg.speaker].name,\n        text: msg.text\n      }));\n\n      // Call the backend to continue the conversation\n      const response = await fetch(`${BACKEND_URL}/generate-conversation`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          starter: messages[0].text,\n          // Original starter\n          messages: formattedMessages\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Backend error (${response.status}): ${errorText}`);\n      }\n      const data = await response.json();\n      console.log(\"Backend response:\", data);\n\n      // Remove loading indicator\n      setMessages(prev => prev.filter(m => m.text !== \"...\"));\n\n      // Add Jordan's response\n      addMessage(1, data.jordan_message);\n\n      // Add Alex's next response\n      addMessage(0, data.alex_message);\n\n      // Increment exchange count\n      setExchangeCount(prev => prev + 1);\n      setIsLoading(false);\n    } catch (err) {\n      console.error(\"Error continuing conversation:\", err);\n      setError(`Error: ${err.message}`);\n\n      // Remove loading indicator\n      setMessages(prev => prev.filter(m => m.text !== \"...\"));\n\n      // Add fallback responses if backend fails\n      const jordanFallbacks = [\"That's amazing! I had a similar experience while traveling through Southeast Asia. The perspective you gain from immersing yourself in different cultures is invaluable.\", \"I totally get what you mean! Life is all about these moments of discovery and connection. Last month I tried rock climbing for the first time, and it was such a powerful metaphor for overcoming challenges.\", \"Yes! That reminds me of this incredible sunset I witnessed on a hike in New Zealand. Sometimes the most profound insights come when we're pushing our boundaries in nature.\"];\n      const alexFallbacks = [\"That's an interesting perspective. I've been reading about how our experiences shape our worldview in several philosophical texts. The interplay between action and reflection seems crucial to developing wisdom.\", \"I appreciate your enthusiasm for direct experience. There's something to be said for balancing that with contemplative practices. I find that journaling helps me process and find deeper meaning in everyday interactions.\", \"The connection between physical experience and mental insight is fascinating. Philosophers like Merleau-Ponty wrote extensively about embodied cognition - how our physical experiences shape our understanding of the world.\"];\n      addMessage(1, jordanFallbacks[Math.floor(Math.random() * jordanFallbacks.length)]);\n      addMessage(0, alexFallbacks[Math.floor(Math.random() * alexFallbacks.length)]);\n      setExchangeCount(prev => prev + 1);\n      setIsLoading(false);\n    }\n  };\n\n  // Stop the conversation\n  const stopConversation = () => {\n    setIsRunning(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 22\n        }, this),\n        onClick: () => navigate('/'),\n        sx: {\n          mb: 3\n        },\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        textAlign: \"center\",\n        children: \"AI Conversation Simulation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          gap: 2,\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: startConversation,\n          disabled: isRunning && isLoading,\n          children: \"Start New Conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), isRunning && !isLoading && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"secondary\",\n          onClick: continueConversation,\n          children: \"Continue Conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), isRunning && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"error\",\n          onClick: stopConversation,\n          children: \"Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), exchangeCount > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        textAlign: \"center\",\n        sx: {\n          mb: 2\n        },\n        children: [\"Conversation exchanges: \", exchangeCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          height: '60vh',\n          p: 2,\n          mb: 2,\n          overflowY: 'auto',\n          bgcolor: '#f5f5f5'\n        },\n        children: [messages.map(message => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: message.speaker === 0 ? 'flex-start' : 'flex-end',\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              maxWidth: '80%',\n              bgcolor: personalities[message.speaker].color,\n              color: 'white',\n              p: 2,\n              borderRadius: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              sx: {\n                opacity: 0.9,\n                mb: 0.5\n              },\n              children: personalities[message.speaker].name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: message.text === \"...\" ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 16,\n                color: \"inherit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 21\n              }, this) : message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: personalities.map((person, index) => /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            color: person.color\n          },\n          children: [person.name, \": \", messages.filter(m => m.speaker === index && m.text !== \"...\").length, \" messages\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n};\n_s(AIChatSimulation, \"vO8bxMv1KRz1mAEqSA9pgYE/T0I=\", false, function () {\n  return [useNavigate];\n});\n_c = AIChatSimulation;\nexport default AIChatSimulation;\nvar _c;\n$RefreshReg$(_c, \"AIChatSimulation\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","Container","Typography","Box","Button","Paper","CircularProgress","Alert","ArrowBackIcon","jsxDEV","_jsxDEV","personalities","name","color","description","STARTERS","AIChatSimulation","_s","navigate","messages","setMessages","isRunning","setIsRunning","isLoading","setIsLoading","error","setError","messagesEndRef","exchangeCount","setExchangeCount","BACKEND_URL","_messagesEndRef$curre","current","scrollIntoView","behavior","addMessage","speakerIndex","text","newMessage","id","Date","now","speaker","prev","getStarter","Math","floor","random","length","startConversation","starter","console","log","response","fetch","method","headers","body","JSON","stringify","ok","errorText","Error","status","data","json","filter","m","jordan_message","alex_message","err","message","continueConversation","formattedMessages","map","msg","jordanFallbacks","alexFallbacks","stopConversation","maxWidth","children","sx","py","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","mb","variant","gutterBottom","textAlign","severity","display","justifyContent","gap","disabled","elevation","height","p","overflowY","bgcolor","flexDirection","alignItems","borderRadius","opacity","size","ref","person","index","_c","$RefreshReg$"],"sources":["C:/Users/omals/Documents/GitHub/LLM/HackLondon Final submission/dating-app/src/pages/AIChatSimulation.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  Button,\r\n  Paper,\r\n  CircularProgress,\r\n  Alert\r\n} from '@mui/material';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n\r\n// Define the two personas for display purposes\r\nconst personalities = [\r\n  {\r\n    name: \"Alex\",\r\n    color: \"#3f51b5\",\r\n    description: \"Thoughtful, philosophical, enjoys deep conversations\"\r\n  },\r\n  {\r\n    name: \"Jordan\",\r\n    color: \"#f50057\", \r\n    description: \"Energetic, adventurous, loves sharing experiences\"\r\n  }\r\n];\r\n\r\n// Simple conversation starters\r\nconst STARTERS = [\r\n  \"What gives life meaning?\",\r\n  \"Where would you travel if you could go anywhere?\",\r\n  \"Is technology bringing people closer or pushing them apart?\",\r\n  \"What's a book that changed your view of the world?\",\r\n  \"What's something you've changed your mind about recently?\"\r\n];\r\n\r\nconst AIChatSimulation = () => {\r\n  const navigate = useNavigate();\r\n  const [messages, setMessages] = useState([]);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n  const [exchangeCount, setExchangeCount] = useState(0);\r\n\r\n  // Backend API URL\r\n  const BACKEND_URL = \"http://localhost:8000\";\r\n\r\n  // Scroll to bottom when messages change\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  // Add a message to the UI\r\n  const addMessage = (speakerIndex, text) => {\r\n    const newMessage = {\r\n      id: Date.now(),\r\n      speaker: speakerIndex,\r\n      text: text\r\n    };\r\n    \r\n    setMessages(prev => [...prev, newMessage]);\r\n    return newMessage;\r\n  };\r\n\r\n  // Get random starter\r\n  const getStarter = () => {\r\n    return STARTERS[Math.floor(Math.random() * STARTERS.length)];\r\n  };\r\n\r\n  // Start a new conversation using CrewAI backend\r\n  const startConversation = async () => {\r\n    setMessages([]);\r\n    setError(null);\r\n    setIsRunning(true);\r\n    setIsLoading(true);\r\n    setExchangeCount(0);\r\n    \r\n    // Choose a random starter from Alex\r\n    const starter = getStarter();\r\n    console.log(\"Starting with:\", starter);\r\n    \r\n    // Add the starter message from Alex\r\n    addMessage(0, starter);\r\n    \r\n    try {\r\n      // Add loading indicators\r\n      addMessage(1, \"...\");\r\n      \r\n      // Call the backend to get the first exchange\r\n      const response = await fetch(`${BACKEND_URL}/generate-conversation`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          starter: starter,\r\n          messages: []\r\n        })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`Backend error (${response.status}): ${errorText}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log(\"Backend response:\", data);\r\n      \r\n      // Remove loading indicator\r\n      setMessages(prev => prev.filter(m => m.text !== \"...\"));\r\n      \r\n      // Add Jordan's response\r\n      addMessage(1, data.jordan_message);\r\n      \r\n      // Add Alex's next response\r\n      addMessage(0, data.alex_message);\r\n      \r\n      // Increment exchange count\r\n      setExchangeCount(1);\r\n      \r\n      // Set up for continuing the conversation\r\n      setIsLoading(false);\r\n      \r\n    } catch (err) {\r\n      console.error(\"Error starting conversation:\", err);\r\n      setError(`Error: ${err.message}`);\r\n      \r\n      // Remove loading indicator\r\n      setMessages(prev => prev.filter(m => m.text !== \"...\"));\r\n      \r\n      // Add fallback responses if backend fails\r\n      addMessage(1, \"That's a fascinating question! I went hiking in Nepal last year and spent a lot of time thinking about this exact topic. I found that what gives my life meaning is the collection of experiences and connections I make along the way.\");\r\n      \r\n      setIsLoading(false);\r\n      setIsRunning(false);\r\n    }\r\n  };\r\n  \r\n  // Continue the conversation\r\n  const continueConversation = async () => {\r\n    if (!isRunning || isLoading) return;\r\n    \r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      // Add loading indicators for the next exchange\r\n      addMessage(1, \"...\");\r\n      \r\n      // Format messages for the backend\r\n      const formattedMessages = messages.map(msg => ({\r\n        speaker: personalities[msg.speaker].name,\r\n        text: msg.text\r\n      }));\r\n      \r\n      // Call the backend to continue the conversation\r\n      const response = await fetch(`${BACKEND_URL}/generate-conversation`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          starter: messages[0].text, // Original starter\r\n          messages: formattedMessages\r\n        })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`Backend error (${response.status}): ${errorText}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log(\"Backend response:\", data);\r\n      \r\n      // Remove loading indicator\r\n      setMessages(prev => prev.filter(m => m.text !== \"...\"));\r\n      \r\n      // Add Jordan's response\r\n      addMessage(1, data.jordan_message);\r\n      \r\n      // Add Alex's next response\r\n      addMessage(0, data.alex_message);\r\n      \r\n      // Increment exchange count\r\n      setExchangeCount(prev => prev + 1);\r\n      \r\n      setIsLoading(false);\r\n      \r\n    } catch (err) {\r\n      console.error(\"Error continuing conversation:\", err);\r\n      setError(`Error: ${err.message}`);\r\n      \r\n      // Remove loading indicator\r\n      setMessages(prev => prev.filter(m => m.text !== \"...\"));\r\n      \r\n      // Add fallback responses if backend fails\r\n      const jordanFallbacks = [\r\n        \"That's amazing! I had a similar experience while traveling through Southeast Asia. The perspective you gain from immersing yourself in different cultures is invaluable.\",\r\n        \"I totally get what you mean! Life is all about these moments of discovery and connection. Last month I tried rock climbing for the first time, and it was such a powerful metaphor for overcoming challenges.\",\r\n        \"Yes! That reminds me of this incredible sunset I witnessed on a hike in New Zealand. Sometimes the most profound insights come when we're pushing our boundaries in nature.\"\r\n      ];\r\n      \r\n      const alexFallbacks = [\r\n        \"That's an interesting perspective. I've been reading about how our experiences shape our worldview in several philosophical texts. The interplay between action and reflection seems crucial to developing wisdom.\",\r\n        \"I appreciate your enthusiasm for direct experience. There's something to be said for balancing that with contemplative practices. I find that journaling helps me process and find deeper meaning in everyday interactions.\",\r\n        \"The connection between physical experience and mental insight is fascinating. Philosophers like Merleau-Ponty wrote extensively about embodied cognition - how our physical experiences shape our understanding of the world.\"\r\n      ];\r\n      \r\n      addMessage(1, jordanFallbacks[Math.floor(Math.random() * jordanFallbacks.length)]);\r\n      addMessage(0, alexFallbacks[Math.floor(Math.random() * alexFallbacks.length)]);\r\n      \r\n      setExchangeCount(prev => prev + 1);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Stop the conversation\r\n  const stopConversation = () => {\r\n    setIsRunning(false);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Box sx={{ py: 4 }}>\r\n        <Button \r\n          startIcon={<ArrowBackIcon />} \r\n          onClick={() => navigate('/')}\r\n          sx={{ mb: 3 }}\r\n        >\r\n          Back\r\n        </Button>\r\n        \r\n        <Typography variant=\"h4\" gutterBottom textAlign=\"center\">\r\n          AI Conversation Simulation\r\n        </Typography>\r\n        \r\n        {error && (\r\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        \r\n        {/* Controls */}\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', gap: 2, mb: 3 }}>\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            onClick={startConversation}\r\n            disabled={isRunning && isLoading}\r\n          >\r\n            Start New Conversation\r\n          </Button>\r\n          \r\n          {isRunning && !isLoading && (\r\n            <Button \r\n              variant=\"outlined\" \r\n              color=\"secondary\"\r\n              onClick={continueConversation}\r\n            >\r\n              Continue Conversation\r\n            </Button>\r\n          )}\r\n          \r\n          {isRunning && (\r\n            <Button \r\n              variant=\"outlined\" \r\n              color=\"error\"\r\n              onClick={stopConversation}\r\n            >\r\n              Stop\r\n            </Button>\r\n          )}\r\n        </Box>\r\n        \r\n        {/* Exchange counter */}\r\n        {exchangeCount > 0 && (\r\n          <Typography variant=\"body2\" textAlign=\"center\" sx={{ mb: 2 }}>\r\n            Conversation exchanges: {exchangeCount}\r\n          </Typography>\r\n        )}\r\n        \r\n        {/* Chat display */}\r\n        <Paper \r\n          elevation={3} \r\n          sx={{ \r\n            height: '60vh', \r\n            p: 2, \r\n            mb: 2, \r\n            overflowY: 'auto',\r\n            bgcolor: '#f5f5f5' \r\n          }}\r\n        >\r\n          {messages.map((message) => (\r\n            <Box \r\n              key={message.id}\r\n              sx={{ \r\n                display: 'flex', \r\n                flexDirection: 'column',\r\n                alignItems: message.speaker === 0 ? 'flex-start' : 'flex-end',\r\n                mb: 2\r\n              }}\r\n            >\r\n              <Box \r\n                sx={{ \r\n                  maxWidth: '80%', \r\n                  bgcolor: personalities[message.speaker].color,\r\n                  color: 'white',\r\n                  p: 2, \r\n                  borderRadius: 2\r\n                }}\r\n              >\r\n                <Typography variant=\"subtitle2\" sx={{ opacity: 0.9, mb: 0.5 }}>\r\n                  {personalities[message.speaker].name}\r\n                </Typography>\r\n                \r\n                <Typography variant=\"body1\">\r\n                  {message.text === \"...\" ? (\r\n                    <CircularProgress size={16} color=\"inherit\" />\r\n                  ) : message.text}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </Paper>\r\n        \r\n        {/* Stats */}\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          {personalities.map((person, index) => (\r\n            <Typography key={index} variant=\"body2\" sx={{ color: person.color }}>\r\n              {person.name}: {messages.filter(m => m.speaker === index && m.text !== \"...\").length} messages\r\n            </Typography>\r\n          ))}\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AIChatSimulation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}