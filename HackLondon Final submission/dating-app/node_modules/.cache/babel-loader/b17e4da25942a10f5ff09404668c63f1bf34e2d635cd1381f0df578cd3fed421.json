{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omals\\\\Documents\\\\hacklondon 2025\\\\dating-app\\\\src\\\\pages\\\\MatchesScreen.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Typography, Box, Card, CardContent, Button, Grid, Avatar, Chip, CircularProgress, Divider, Paper, Rating } from '@mui/material';\nimport PersonIcon from '@mui/icons-material/Person';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport { getMatches } from '../services/api.ts';\nimport { placeholderPersonality } from '../utils/placeholderPersonality.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MatchesScreen = () => {\n  _s();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  const [matches, setMatches] = useState([]);\n  const [showPlaceholder, setShowPlaceholder] = useState(false);\n\n  // Hardcoded user ID for the demo - in a real app, this would come from auth context or state\n  const userId = 1;\n\n  // Check if the user has completed a placeholder conversation\n  useEffect(() => {\n    const checkPlaceholderConversation = () => {\n      // Check URL parameters or localStorage to see if a conversation was just completed\n      const conversationCompleted = localStorage.getItem('conversationCompleted') === 'true';\n      if (conversationCompleted) {\n        setShowPlaceholder(true);\n        // Reset the flag\n        localStorage.removeItem('conversationCompleted');\n      }\n    };\n    checkPlaceholderConversation();\n  }, []);\n  useEffect(() => {\n    const fetchMatches = async () => {\n      try {\n        const response = await getMatches(userId);\n\n        // If we have placeholder data, add it to the matches\n        if (showPlaceholder) {\n          // Get compatibility score from localStorage or use a default\n          const compatibilityScore = parseInt(localStorage.getItem('placeholderCompatibilityScore') || '85', 10);\n          const placeholderMatch = {\n            id: 999,\n            matchUserId: 999,\n            name: placeholderPersonality.name,\n            age: placeholderPersonality.age,\n            interests: placeholderPersonality.interests.join(', '),\n            profilePicture: undefined,\n            compatibilityScore: compatibilityScore,\n            conversationTranscript: 'See the full transcript for details.'\n          };\n          setMatches([placeholderMatch, ...response.matches]);\n        } else {\n          setMatches(response.matches);\n        }\n      } catch (error) {\n        console.error('Error fetching matches:', error);\n\n        // Provide demo data if API fails\n        let demoMatches = [{\n          id: 1,\n          matchUserId: 2,\n          name: 'Sarah',\n          age: 28,\n          interests: 'Hiking, Photography, Travel',\n          profilePicture: '',\n          compatibilityScore: 92,\n          conversationTranscript: 'This is a sample conversation transcript.'\n        }, {\n          id: 2,\n          matchUserId: 3,\n          name: 'Michael',\n          age: 32,\n          interests: 'Reading, Music, Cooking',\n          profilePicture: '',\n          compatibilityScore: 87,\n          conversationTranscript: 'This is another sample conversation transcript.'\n        }, {\n          id: 3,\n          matchUserId: 4,\n          name: 'Emma',\n          age: 26,\n          interests: 'Yoga, Movies, Art',\n          profilePicture: '',\n          compatibilityScore: 78,\n          conversationTranscript: 'Yet another sample conversation transcript.'\n        }];\n\n        // If we have placeholder data, add it to the demo matches\n        if (showPlaceholder) {\n          const compatibilityScore = parseInt(localStorage.getItem('placeholderCompatibilityScore') || '85', 10);\n          const placeholderMatch = {\n            id: 999,\n            matchUserId: 999,\n            name: placeholderPersonality.name,\n            age: placeholderPersonality.age,\n            interests: placeholderPersonality.interests.join(', '),\n            profilePicture: undefined,\n            compatibilityScore: compatibilityScore,\n            conversationTranscript: 'See the full transcript for details.'\n          };\n          demoMatches = [placeholderMatch, ...demoMatches];\n        }\n        setMatches(demoMatches);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMatches();\n  }, [userId, showPlaceholder]);\n  const handleViewConversation = matchId => {\n    // If it's the placeholder match, use 'placeholder' as the ID\n    if (matchId === 999) {\n      navigate('/conversation/placeholder');\n    } else {\n      navigate(`/conversation/${matchId}`);\n    }\n  };\n  const handleViewTranscript = matchId => {\n    // If it's the placeholder match, use 'placeholder' as the ID\n    if (matchId === 999) {\n      navigate('/transcript/placeholder');\n    } else {\n      navigate(`/transcript/${matchId}`);\n    }\n  };\n\n  // Function to render compatibility score as hearts\n  const renderCompatibilityScore = score => {\n    // Convert score to 0-5 range for Rating component\n    const ratingScore = score / 100 * 5;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        my: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Rating, {\n        value: ratingScore,\n        readOnly: true,\n        precision: 0.5,\n        icon: /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n          fontSize: \"inherit\",\n          color: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this),\n        emptyIcon: /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n          fontSize: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          ml: 1\n        },\n        children: [Math.round(score), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        textAlign: \"center\",\n        children: \"Your AI-Generated Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        color: \"text.secondary\",\n        gutterBottom: true,\n        textAlign: \"center\",\n        children: \"Based on your answers to the 36 questions, our AI has found these compatible matches for you.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          my: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 60\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this) : matches.length > 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        sx: {\n          mt: 2\n        },\n        children: matches.map(match => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            elevation: 3,\n            className: \"match-card\",\n            sx: {\n              transition: 'transform 0.3s, box-shadow 0.3s',\n              '&:hover': {\n                transform: 'translateY(-8px)',\n                boxShadow: 8\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  src: match.profilePicture,\n                  sx: {\n                    width: 120,\n                    height: 120,\n                    mb: 2,\n                    bgcolor: match.id === 999 ? 'secondary.main' : 'primary.main'\n                  },\n                  children: match.name[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  component: \"h2\",\n                  gutterBottom: true,\n                  children: [match.name, \", \", match.age]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    justifyContent: 'center',\n                    gap: 0.5,\n                    mb: 1\n                  },\n                  children: match.interests.split(', ').map((interest, index) => /*#__PURE__*/_jsxDEV(Chip, {\n                    label: interest,\n                    size: \"small\",\n                    color: match.id === 999 ? \"secondary\" : \"primary\",\n                    variant: \"outlined\"\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 23\n                }, this), renderCompatibilityScore(match.compatibilityScore)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                sx: {\n                  my: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  mt: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"primary\",\n                  startIcon: /*#__PURE__*/_jsxDEV(ChatIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 36\n                  }, this),\n                  onClick: () => handleViewConversation(match.matchUserId),\n                  children: \"View Conversation\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  startIcon: /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 36\n                  }, this),\n                  onClick: () => handleViewTranscript(match.matchUserId),\n                  children: \"Full Transcript\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this)\n        }, match.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 4,\n          textAlign: 'center',\n          mt: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"text.secondary\",\n          gutterBottom: true,\n          children: \"No matches found yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"Complete your profile and answer the 36 questions to get matches.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 26\n          }, this),\n          sx: {\n            mt: 2\n          },\n          onClick: () => navigate('/create-profile'),\n          children: \"Create Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n_s(MatchesScreen, \"hUyYkUUH/0x+hF/aHXvzmrTRi9w=\", false, function () {\n  return [useNavigate];\n});\n_c = MatchesScreen;\nexport default MatchesScreen;\nvar _c;\n$RefreshReg$(_c, \"MatchesScreen\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Container","Typography","Box","Card","CardContent","Button","Grid","Avatar","Chip","CircularProgress","Divider","Paper","Rating","PersonIcon","FavoriteIcon","ChatIcon","getMatches","placeholderPersonality","jsxDEV","_jsxDEV","MatchesScreen","_s","navigate","loading","setLoading","matches","setMatches","showPlaceholder","setShowPlaceholder","userId","checkPlaceholderConversation","conversationCompleted","localStorage","getItem","removeItem","fetchMatches","response","compatibilityScore","parseInt","placeholderMatch","id","matchUserId","name","age","interests","join","profilePicture","undefined","conversationTranscript","error","console","demoMatches","handleViewConversation","matchId","handleViewTranscript","renderCompatibilityScore","score","ratingScore","sx","display","alignItems","justifyContent","my","children","value","readOnly","precision","icon","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","emptyIcon","variant","ml","Math","round","maxWidth","py","component","gutterBottom","textAlign","size","length","container","spacing","mt","map","match","item","xs","md","lg","elevation","className","transition","transform","boxShadow","flexDirection","mb","src","width","height","bgcolor","flexWrap","gap","split","interest","index","label","startIcon","onClick","p","_c","$RefreshReg$"],"sources":["C:/Users/omals/Documents/hacklondon 2025/dating-app/src/pages/MatchesScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Container,\n  Typography,\n  Box,\n  Card,\n  CardContent,\n  Button,\n  Grid,\n  Avatar,\n  Chip,\n  CircularProgress,\n  Divider,\n  Paper,\n  Rating\n} from '@mui/material';\nimport PersonIcon from '@mui/icons-material/Person';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport { getMatches, Match } from '../services/api.ts';\nimport { placeholderPersonality } from '../utils/placeholderPersonality.ts';\n\nconst MatchesScreen: React.FC = () => {\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  const [matches, setMatches] = useState<Match[]>([]);\n  const [showPlaceholder, setShowPlaceholder] = useState(false);\n  \n  // Hardcoded user ID for the demo - in a real app, this would come from auth context or state\n  const userId = 1;\n  \n  // Check if the user has completed a placeholder conversation\n  useEffect(() => {\n    const checkPlaceholderConversation = () => {\n      // Check URL parameters or localStorage to see if a conversation was just completed\n      const conversationCompleted = localStorage.getItem('conversationCompleted') === 'true';\n      \n      if (conversationCompleted) {\n        setShowPlaceholder(true);\n        // Reset the flag\n        localStorage.removeItem('conversationCompleted');\n      }\n    };\n    \n    checkPlaceholderConversation();\n  }, []);\n\n  useEffect(() => {\n    const fetchMatches = async () => {\n      try {\n        const response = await getMatches(userId);\n        \n        // If we have placeholder data, add it to the matches\n        if (showPlaceholder) {\n          // Get compatibility score from localStorage or use a default\n          const compatibilityScore = parseInt(localStorage.getItem('placeholderCompatibilityScore') || '85', 10);\n          \n          const placeholderMatch: Match = {\n            id: 999,\n            matchUserId: 999,\n            name: placeholderPersonality.name,\n            age: placeholderPersonality.age,\n            interests: placeholderPersonality.interests.join(', '),\n            profilePicture: undefined,\n            compatibilityScore: compatibilityScore,\n            conversationTranscript: 'See the full transcript for details.'\n          };\n          \n          setMatches([placeholderMatch, ...response.matches]);\n        } else {\n          setMatches(response.matches);\n        }\n      } catch (error) {\n        console.error('Error fetching matches:', error);\n        \n        // Provide demo data if API fails\n        let demoMatches = [\n          {\n            id: 1,\n            matchUserId: 2,\n            name: 'Sarah',\n            age: 28,\n            interests: 'Hiking, Photography, Travel',\n            profilePicture: '',\n            compatibilityScore: 92,\n            conversationTranscript: 'This is a sample conversation transcript.'\n          },\n          {\n            id: 2,\n            matchUserId: 3,\n            name: 'Michael',\n            age: 32,\n            interests: 'Reading, Music, Cooking',\n            profilePicture: '',\n            compatibilityScore: 87,\n            conversationTranscript: 'This is another sample conversation transcript.'\n          },\n          {\n            id: 3,\n            matchUserId: 4,\n            name: 'Emma',\n            age: 26,\n            interests: 'Yoga, Movies, Art',\n            profilePicture: '',\n            compatibilityScore: 78,\n            conversationTranscript: 'Yet another sample conversation transcript.'\n          }\n        ];\n        \n        // If we have placeholder data, add it to the demo matches\n        if (showPlaceholder) {\n          const compatibilityScore = parseInt(localStorage.getItem('placeholderCompatibilityScore') || '85', 10);\n          \n          const placeholderMatch: Match = {\n            id: 999,\n            matchUserId: 999,\n            name: placeholderPersonality.name,\n            age: placeholderPersonality.age,\n            interests: placeholderPersonality.interests.join(', '),\n            profilePicture: undefined,\n            compatibilityScore: compatibilityScore,\n            conversationTranscript: 'See the full transcript for details.'\n          };\n          \n          demoMatches = [placeholderMatch, ...demoMatches];\n        }\n        \n        setMatches(demoMatches);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMatches();\n  }, [userId, showPlaceholder]);\n\n  const handleViewConversation = (matchId: number) => {\n    // If it's the placeholder match, use 'placeholder' as the ID\n    if (matchId === 999) {\n      navigate('/conversation/placeholder');\n    } else {\n      navigate(`/conversation/${matchId}`);\n    }\n  };\n\n  const handleViewTranscript = (matchId: number) => {\n    // If it's the placeholder match, use 'placeholder' as the ID\n    if (matchId === 999) {\n      navigate('/transcript/placeholder');\n    } else {\n      navigate(`/transcript/${matchId}`);\n    }\n  };\n\n  // Function to render compatibility score as hearts\n  const renderCompatibilityScore = (score: number) => {\n    // Convert score to 0-5 range for Rating component\n    const ratingScore = (score / 100) * 5;\n    return (\n      <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', my: 1 }}>\n        <Rating \n          value={ratingScore} \n          readOnly \n          precision={0.5}\n          icon={<FavoriteIcon fontSize=\"inherit\" color=\"error\" />}\n          emptyIcon={<FavoriteIcon fontSize=\"inherit\" />}\n        />\n        <Typography variant=\"h6\" sx={{ ml: 1 }}>\n          {Math.round(score)}%\n        </Typography>\n      </Box>\n    );\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ py: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom textAlign=\"center\">\n          Your AI-Generated Matches\n        </Typography>\n        \n        <Typography variant=\"subtitle1\" color=\"text.secondary\" gutterBottom textAlign=\"center\">\n          Based on your answers to the 36 questions, our AI has found these compatible matches for you.\n        </Typography>\n\n        {loading ? (\n          <Box sx={{ display: 'flex', justifyContent: 'center', my: 8 }}>\n            <CircularProgress size={60} />\n          </Box>\n        ) : matches.length > 0 ? (\n          <Grid container spacing={4} sx={{ mt: 2 }}>\n            {matches.map((match) => (\n              <Grid item xs={12} md={6} lg={4} key={match.id}>\n                <Card elevation={3} className=\"match-card\" sx={{\n                  transition: 'transform 0.3s, box-shadow 0.3s',\n                  '&:hover': {\n                    transform: 'translateY(-8px)',\n                    boxShadow: 8,\n                  },\n                }}>\n                  <CardContent>\n                    <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', mb: 2 }}>\n                      <Avatar \n                        src={match.profilePicture} \n                        sx={{ width: 120, height: 120, mb: 2, bgcolor: match.id === 999 ? 'secondary.main' : 'primary.main' }}\n                      >\n                        {match.name[0]}\n                      </Avatar>\n                      <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n                        {match.name}, {match.age}\n                      </Typography>\n                      \n                      <Box sx={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center', gap: 0.5, mb: 1 }}>\n                        {match.interests.split(', ').map((interest, index) => (\n                          <Chip\n                            key={index}\n                            label={interest}\n                            size=\"small\"\n                            color={match.id === 999 ? \"secondary\" : \"primary\"}\n                            variant=\"outlined\"\n                          />\n                        ))}\n                      </Box>\n                      \n                      {renderCompatibilityScore(match.compatibilityScore)}\n                    </Box>\n                    \n                    <Divider sx={{ my: 2 }} />\n                    \n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 2 }}>\n                      <Button \n                        variant=\"outlined\" \n                        color=\"primary\"\n                        startIcon={<ChatIcon />}\n                        onClick={() => handleViewConversation(match.matchUserId)}\n                      >\n                        View Conversation\n                      </Button>\n                      \n                      <Button \n                        variant=\"contained\" \n                        color=\"primary\"\n                        startIcon={<FavoriteIcon />}\n                        onClick={() => handleViewTranscript(match.matchUserId)}\n                      >\n                        Full Transcript\n                      </Button>\n                    </Box>\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        ) : (\n          <Paper sx={{ p: 4, textAlign: 'center', mt: 4 }}>\n            <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n              No matches found yet.\n            </Typography>\n            <Typography variant=\"body1\">\n              Complete your profile and answer the 36 questions to get matches.\n            </Typography>\n            <Button \n              variant=\"contained\" \n              color=\"primary\"\n              startIcon={<PersonIcon />}\n              sx={{ mt: 2 }}\n              onClick={() => navigate('/create-profile')}\n            >\n              Create Profile\n            </Button>\n          </Paper>\n        )}\n      </Box>\n    </Container>\n  );\n};\n\nexport default MatchesScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}